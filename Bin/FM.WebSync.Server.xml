<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FM.WebSync.Server</name>
    </assembly>
    <members>
        <member name="M:FM.WebSync.Server.AsyncResult.#ctor(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="context"></param>
            <param name="callback"></param>
            <param name="asyncState"></param>
        </member>
        <member name="P:FM.WebSync.Server.AsyncResult.Messages">
            <summary>
            Messages to be delivered to the client.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.AsyncResult.DomainKey">
            <summary>
            The unique domain key (always upper-case).
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Manager">
            <summary>
            Base class which contains methods and properties shared by both
            the <see cref="T:FM.WebSync.Server.RequestManager"/> and the <see cref="T:FM.WebSync.Server.ClientManager"/>.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Manager.Log">
            <summary>
            Log4net logger.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Manager.RequestHandlerExists">
            <summary>
            Determines whether this instance serves as an endpoint for client/publisher
            requests.
            </summary>
            <returns><c>true</c> if this instance serves as a WebSync endpoint; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.#ctor">
            <summary>
            Initializes the <see cref="T:FM.WebSync.Server.ClientManager"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.RegisterScriptModifierMethod(System.Reflection.MethodInfo)">
            <summary>
            Tries to register a method associated with a WebSync script modifier.
            </summary>
            <param name="methodInfo">The method info.</param>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.UnregisterScriptModifierMethod(System.Reflection.MethodInfo)">
            <summary>
            Tries to unregister a method associated with a WebSync script modifier.
            </summary>
            <param name="methodInfo">The method info.</param>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.FireScriptModifier(FM.WebSync.Server.ScriptType,System.Web.HttpRequestBase,System.String@,System.String@)">
            <summary>
            Fires an event handler.
            </summary>
            <param name="scriptType">The type of script modifier being fired.</param>
            <param name="request">The current HTTP request.</param>
            <param name="body">The current script body.</param>
            <param name="header">The current script header.</param>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.Deliver(System.Web.HttpContextBase)">
            <summary>
            Delivers the JavaScript client to the response stream of the specified HTTP context.
            </summary>
            <param name="context">The HTTP context to which the JavaScript client should be written.</param>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.IsFrame(System.Web.HttpRequestBase)">
            <summary>
            Determines whether the specified context is requesting an HTML frame.
            </summary>
            <param name="request">The HTTP request to analyze.</param>
            <returns><c>true</c>, if the context is requesting the frame; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.IsDebug(System.Web.HttpRequestBase)">
            <summary>
            Determines whether the specified context is requesting a debug version of the content.
            </summary>
            <param name="request">The HTTP request to analyze.</param>
            <returns><c>true</c>, if the context is requesting debug; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.TestBooleanQueryParameter(System.Web.HttpRequestBase,System.String)">
            <summary>
            Tests a query parameter as a boolean value.  A non-empty, non-false value is considered the positive case, where null or "false" is considered the negative case.
            </summary>
            <param name="request">The HTTP request to analyze.</param>
            <param name="parameterName">Name of the query parameter.</param>
            <returns><c>true</c>, if the query string contains the parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.GetFrame(System.Web.HttpRequestBase)">
            <summary>
            Gets the HTML frame for use with the JavaScript client.
            </summary>
            <param name="request">The current HTTP request.</param>
            <returns>The HTML frame for use with the JavaScript client.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.BuildFrame(System.Web.HttpRequestBase,System.String,System.Reflection.Assembly,System.String,System.String@,System.String@)">
            <summary>
            Builds the frame content.
            </summary>
            <param name="request">The current HTTP request.</param>
            <param name="version">The frame version.</param>
            <param name="assembly">The assembly which contains the content.</param>
            <param name="baseResourcePath">The base resource path for the content.</param>
            <param name="body">The script body.</param>
            <param name="header">The script header.</param>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.GetClient(System.Web.HttpRequestBase)">
            <summary>
            Gets the JavaScript client source.
            </summary>
            <param name="request">The current HTTP request.</param>
            <returns>The JavaScript client source.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.BuildClient(System.Web.HttpRequestBase,System.String,System.Reflection.Assembly,System.String,System.String@,System.String@)">
            <summary>
            Builds the JavaScript content.
            </summary>
            <param name="request">The current HTTP request.</param>
            <param name="version">The JavaScript version.</param>
            <param name="assembly">The assembly which contains the content.</param>
            <param name="baseResourcePath">The base resource path for the content.</param>
            <param name="body">The script body.</param>
            <param name="header">The script header.</param>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.AddToQuery(System.String,System.String)">
            <summary>
            Adds a query parameter to a URL.
            </summary>
            <param name="url">The URL to modify.</param>
            <param name="key">The key of the query parameter.</param>
            <returns>The URL with the query parameter added.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.AddToQuery(System.String,System.String,System.String)">
            <summary>
            Adds a query parameter to a URL. If there are already query parameters in place, it will properly detect and
            use a ? or an &amp; as needed. The key and value will be automatically encoded.
            </summary>
            <param name="url">The URL to modify.</param>
            <param name="key">The non-encoded key of the query parameter.</param>
            <param name="value">The non-encoded value of the query parameter.</param>
            <returns>The URL with the query parameter added.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.AppendScheme(System.String,System.String)">
            <summary>
            Prepends a scheme (http:// or https://) to a URL if it doesn't already exist.
            </summary>
            <param name="url">The URL to analyze and potentially modify.</param>
            <param name="scheme">The scheme to prepend.</param>
            <returns>The modified URL.</returns>
        </member>
        <member name="M:FM.WebSync.Server.ClientManager.GetEmbeddedResource(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Gets an embedded resource.
            </summary>
            <param name="assembly">The assembly which contains the embedded resource.</param>
            <param name="basePath">The base path of the embedded resource.</param>
            <param name="relativeFileName">The relative name of the embedded resource.</param>
            <returns></returns>
        </member>
        <member name="T:FM.WebSync.Server.Configuration.TargetedScan">
            <summary>
            Defines how WebSync Server scans referenced assemblies to locate event and script modifier methods
            that may be part of the application code or a WebSync extension.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Configuration.TargetedScan.Auto">
            <summary>
            Instructs WebSync Server to exclude referenced assemblies that match a pre-defined black-list of Microsoft, Windows, and Frozen Mountain assemblies (this is the default).
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Configuration.TargetedScan.Off">
            <summary>
            Instructs WebSync Server to scan every referenced assembly.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Configuration.TargetedScan.On">
            <summary>
            Instructs WebSync Server to only include referenced assemblies that define the WebSyncMethodContainer assembly-level attribute.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.OutputWriter.Write(System.Web.HttpContextBase,System.String)">
            <summary>
            Writes output to the response stream of an HTTP context
            with handling for JSON-P.
            </summary>
            <param name="context">The context in which the response stream exists.</param>
            <param name="content">The content to send.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedSubscription.Add(FM.WebSync.Server.Providers.CachedClient)">
            <summary>
            Adds the specified client to the subscription.
            </summary>
            <param name="client">The cached client to subscribe.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedSubscription.Remove(FM.WebSync.Server.Providers.CachedClient)">
            <summary>
            Removes the specified client from the subscription.
            </summary>
            <param name="client">The cached client to unsubscribe.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedSubscription.GetClients">
            <summary>
            Gets the subscribed clients.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedSubscription.GetClientCount">
            <summary>
            Gets the number of subscribed clients.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedSubscription.Distribute(FM.WebSync.Core.Message,System.String,System.Boolean)">
            <summary>
            Finalizes changes to the subscription array and distributes a message.
            </summary>
            <param name="message">The message to distribute to the subscription.</param>
            <param name="publisherId">The ID of the publisher.</param>
            <param name="includePublisher">Whether or not to include the publisher.</param>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity">
            <summary>
            Windows Azure Table entity for bindings.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity"/> class.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.PartitionKey">
            <summary>
            Gets or sets the domain key (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.RowKey">
            <summary>
            Gets or sets a random GUID (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.DomainKey">
            <summary>
            Gets or sets the client's domain key (<b>do not use in Azure queries</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.ClientId">
            <summary>
            Gets or sets the client ID.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.Key">
            <summary>
            Gets or sets the key of the bound value.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.Private">
            <summary>
            Gets or sets whether the record is public or private.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingEntity.ValueJson">
            <summary>
            Gets or sets the value bound to the client ID (formatted as JSON).
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingServiceContext">
            <summary>
            Windows Azure Table service context for bindings.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1">
            <summary>
            Windows Azure Table service context for generic entity.
            </summary>
            <typeparam name="T">The type of entity to provide a context for.</typeparam>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.#ctor(System.String,Microsoft.WindowsAzure.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1"/> class.
            </summary>
            <param name="baseAddress">The base address for queries.</param>
            <param name="credentials">The Azure account credentials.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.ResolveEntityType(System.String)">
            <summary>
            Force-resolves the type of the entity to improve performance.
            </summary>
            <param name="name">The name (ignored).</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.CreateIfNotExist">
            <summary>
            Creates the table if it doesn't exist.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the first entity matching the specified conditions.
            </summary>
            <param name="where">The conditional "where" component of the query.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.SelectAll">
            <summary>
            Selects all the table entities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Selects the table entities using the specified filter.
            </summary>
            <param name="where">The conditional "where" component of the query.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.Delete(`0,System.Boolean)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity to delete.</param>
            <param name="saveChanges">Whether or not to save the context changes.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.Insert(`0,System.Boolean)">
            <summary>
            Inserts the specified entity.
            </summary>
            <param name="entity">The entity to insert.</param>
            <param name="saveChanges">Whether or not to save the context changes.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.Update(`0,System.Boolean)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="saveChanges">Whether or not to save the context changes.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.Save(System.Boolean)">
            <summary>
            Saves the the current context.
            </summary>
            <param name="batch">if set to <c>true</c> deliver the messages as batch.</param>
        </member>
        <member name="P:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.TableName">
            <summary>
            The table name for the service context.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.AzureTable.WebSyncServiceContext`1.Table">
            <summary>
            Gets the queryable table.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingServiceContext.#ctor(System.String,Microsoft.WindowsAzure.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionServiceContext"/> class.
            </summary>
            <param name="baseAddress">The base address for queries.</param>
            <param name="credentials">The Azure account credentials.</param>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.BindingServiceContext.TableName">
            <summary>
            The table name for the service context.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.StickyPullProvider">
            <summary>
            Base definition of the methods required for a WebSync <see cref="T:FM.WebSync.Server.Providers.StickyProvider"/>
            implementation that periodically polls for messages from an intermediary store.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.StickyProvider">
            <summary>
            Base definition of the methods required for a WebSync provider implementation
            that supports sticky sessions (which allow in-process client caching).
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Provider">
            <summary>
            Base definition of the methods required for a WebSync provider implementation.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Providers.Provider.ForceInitialize">
            <summary>
            If <c>true</c>, forces this instance to initialize as a message endpoint.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Provider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Provider"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Provider.NewClientId">
            <summary>
            Generates a new globally unique client ID.
            </summary>
            <returns>A new globally unique client ID.</returns>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Provider.Log">
            <summary>
            Log4net logger.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetUniqueApplicationId">
            <summary>
            Returns a string that uniquely identifies this application.
            </summary>
            <returns>A string that uniquely identifies this application.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.RegisterServer">
            <summary>
            Registers the server with the store.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.Heartbeat">
            <summary>
            Informs the server registrar that this server is still active.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetExistingLocalClients">
            <summary>
            Gets any existing clients registered with this server instance.
            </summary>
            <returns>
            An array of existing clients mapped to this server instance.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.StoreClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Stores the client details to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.StoreBoundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-bound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were bound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.StoreUnboundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-unbound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were unbound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.StoreSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-subscribed channels to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were subscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.StoreUnsubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-unsubscribed channels to persistent storage.
            </summary>
            <param name="clientId">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were unsubscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.StoreDisconnectedClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Flags or deletes the disconnected client in persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.StoreIdleDisconnectedClients(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Flags or deletes the idle-disconnected clients in persistent storage.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>The client identities that were present and flagged/deleted.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message to all subscribers of a channel.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">True to include the publisher in the delivery list.  False to exclude.</param>
            <returns><c>true</c> if the message was published; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.MigrateClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Migrates a client to this server instance.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="boundRecords">Any records to which the client is bound.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>True if the client was migrated successfully, false otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetClientCount(System.String)">
            <summary>
            Gets the number of clients connected for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>The number of clients connected for the domain key.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>The number of clients connected to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>A list of client IDs currently connected.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Fetches the IDs of clients currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>A list of client IDs currently subscribed to a given channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetSubscribedClients(System.String,System.String)">
            <summary>
            Fetches the details of clients currently subscribed to a given channel, including
            any key/value pairs bound to the client ID.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>A list of details about clients currently subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>A list of channels to which the client is subscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyProvider.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>A hashtable of key/value pairs bound to the client ID.</returns>
        </member>
        <member name="P:FM.WebSync.Server.Providers.StickyProvider.Cache">
            <summary>
            The provider cache which provides in-memory storage.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyPullProvider.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyPullProvider.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyPullProvider.PickupMessages">
            <summary>
            Picks up messages pending delivery from persistent storage.
            </summary>
            <returns>A list of messages in their respective envelopes.</returns>
        </member>
        <member name="T:FM.WebSync.Server.Providers.ExistingClient">
            <summary>
            A description of an existing client.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.ExistingClient.Identity">
            <summary>
            The unique client identity.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.ExistingClient.BoundRecords">
            <summary>
            The client's bound records.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.ExistingClient.SubscribedChannels">
            <summary>
            The client's subscribed channels.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.IdledClient">
            <summary>
            A description of a client that has exceeded the allowed timeout.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.IdledClient.Identity">
            <summary>
            The unique client identity.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.IdledClient.BoundRecords">
            <summary>
            The client's bound records.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.IdledClient.SubscribedChannels">
            <summary>
            The client's subscribed channels.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider">
            <summary>
            Sticky WebSync provider using SQL Server for client state storage and to push messages.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.StickyPushProvider">
            <summary>
            Base definition of the methods required for a WebSync <see cref="T:FM.WebSync.Server.Providers.StickyProvider"/>
            implementation that pushes directly to a distribution queue for message transfer.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StickyPushProvider.DistributeMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Distributes a message to waiting clients.
            </summary>
            <param name="message">The message to deliver.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">Whether or not to include the publisher in delivery.</param>
            <returns><c>true</c> if the message was delivered, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider"/> class.
            </summary>
            <param name="settings">The provider settings.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.ManageSchema">
            <summary>
            Verifies that the database structures are in place.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetUniqueApplicationId">
            <summary>
            Returns a string that uniquely identifies this application.
            </summary>
            <returns>
            A string that uniquely identifies this application.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetExistingLocalClients">
            <summary>
            Gets any existing clients registered with this server instance.
            </summary>
            <returns>
            An array of existing clients mapped to this server instance.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.StoreClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Stores the client details to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.StoreDisconnectedClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Flags or deletes the disconnected client in persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.StoreIdleDisconnectedClients(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Flags or deletes the idle-disconnected clients in persistent storage.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>The client identities that were present and flagged/deleted.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.StoreBoundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-bound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were bound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.StoreUnboundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-unbound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were unbound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.StoreSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-subscribed channels to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were subscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.StoreUnsubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-unsubscribed channels to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were unsubscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.MigrateClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Migrates a client to this server instance.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="boundRecords">Any records to which the client is bound.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>
            True if the client was migrated successfully, false otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetClientCount(System.String)">
            <summary>
            Gets the number of clients connected for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            The number of clients connected for the domain key.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            The number of clients connected to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            A list of client IDs currently connected.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Fetches the IDs of clients currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of client IDs currently subscribed to a given channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetSubscribedClients(System.String,System.String)">
            <summary>
            Fetches the details of clients currently subscribed to a given channel, including
            any key/value pairs bound to the client ID.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of details about clients currently subscribed to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A list of channels to which the client is subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A hashtable of key/value pairs bound to the client ID.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.RegisterServer">
            <summary>
            Registers the server with the store.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.Heartbeat">
            <summary>
            Informs the server registrar that this server is still active.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlDependencyProvider.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message to all subscribers of a channel.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">True to include the publisher in the delivery list.  False to exclude.</param>
            <returns>
            	<c>true</c> if the message was published; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:FM.WebSync.Server.SessionClientHandler">
            <summary>
            <see cref="T:FM.WebSync.Server.ClientHandler"/> that provides read-only access to session state in
            <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/>-decorated methods.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.SessionClientHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes a client request synchronously.
            </summary>
            <param name="context">The HTTP context.</param>
        </member>
        <member name="P:FM.WebSync.Server.SessionClientHandler.IsReusable">
            <summary>
            Flags the handler as reusable.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.SqlProvider2">
            <summary>
            Stateless WebSync provider using SQL Server for client storage and message transfer.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.StatelessProvider">
            <summary>
            Base definition of the methods required for a WebSync provider implementation
            that does not support sticky sessions (which allow in-process client caching).
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.ConnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Connects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns><c>true</c> if the client was connected; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.BindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Binds a client to a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to bind.</param>
            <returns>The records to which the client was bound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.UnbindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Unbinds a client from a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to unbind.</param>
            <returns>The records from which the client was unbound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.SubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Subscribes a client to a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels to which the client should be subscribed.</param>
            <returns>The channels to which the client was subscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.UnsubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Unsubscribes a client from a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels from which the client should be unsubscribed.</param>
            <returns>The channels from which the client was unsubscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.DisconnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Disconnects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>True if the client was disconnected, false otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.DisconnectIdleClients(System.Int32)">
            <summary>
            Disconnects clients who have exceeded the allowed inactivity threshold,
            returning the removed clients.
            </summary>
            <param name="allowedInactivity">The allowed inactivity threshold.</param>
            <returns>An array of idled clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetClientMessages(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Gets the pending messages for a set of clients.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>The pending messages for each of the clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">if set to <c>true</c> include the publisher as a message recipient.</param>
            <returns><c>true</c> if the message was published; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.VerifyClientExists(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Verifies that a client record exists and returns bound client data
            (JSON-encoded), if any.
            </summary>
            <param name="clientIdentity">The client record to verify.</param>
            <param name="boundRecords">Any key/value pairs bound to the client ID.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns><c>true</c> if the client exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.KeepClientAlive(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Keeps the specified clients from idling out.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns><c>true</c> if the client could be kept alive, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetClientCount(System.String)">
            <summary>
            Gets the number of connected clients for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>The number of connected clients for the domain key.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>The number of clients connected to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>A list of client IDs currently connected.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Gets the client IDs subscribed to a given channel.
            </summary>
            <param name="channel">The channel to check.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>A list of client IDs subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetSubscribedClients(System.String,System.String)">
            <summary>
            Gets the details of any clients subscribed to a given channel.
            </summary>
            <param name="channel">The channel to check.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>A list of details for clients subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>A list of channels to which the client is subscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.StatelessProvider.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>A hashtable of key/value pairs bound to the client ID.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.SqlProvider2"/> class.
            </summary>
            <param name="settings">The provider settings.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.ManageSchema">
            <summary>
            Verifies that the database structures are in place.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.ConnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Connects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns><c>true</c> if the client was connected, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.BindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Binds a client to a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to bind.</param>
            <returns>
            The records to which the client was bound.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.UnbindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Unbinds a client from a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to unbind.</param>
            <returns>
            The records from which the client was unbound.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.SubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Subscribes a client to a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels to which the client should be subscribed.</param>
            <returns>
            The channels to which the client was subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.UnsubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Unsubscribes a client from a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels from which the client should be unsubscribed.</param>
            <returns>
            The channels from which the client was unsubscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.DisconnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Disconnects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>
            True if the client was disconnected, false otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.DisconnectIdleClients(System.Int32)">
            <summary>
            Disconnects clients who have exceeded the allowed inactivity threshold,
            returning the removed clients.
            </summary>
            <param name="allowedInactivity">The allowed inactivity threshold.</param>
            <returns>An array of idled clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.VerifyClientExists(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Verifies that a client record exists and returns bound client data
            (JSON-encoded), if any.
            </summary>
            <param name="clientIdentity">The client record to verify.</param>
            <param name="boundRecords">Any key/value pairs bound to the client ID.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>
            	<c>true</c> if the client exists, <c>false</c> otherwise
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.KeepClientAlive(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Keeps the specified clients from idling out.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>
            	<c>true</c> if the client could be kept alive, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetClientCount(System.String)">
            <summary>
            Gets the number of clients connected for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            The number of clients connected for the domain key.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            The number of clients connected to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            A list of client IDs currently connected.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Fetches the IDs of clients currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of client IDs currently subscribed to a given channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetSubscribedClients(System.String,System.String)">
            <summary>
            Fetches the details of clients currently subscribed to a given channel, including
            any key/value pairs bound to the client ID.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of details about clients currently subscribed to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A list of channels to which the client is subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A hashtable of key/value pairs bound to the client ID.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">if set to <c>true</c> include the publisher as a message recipient.</param>
            <returns>
            	<c>true</c> if the message was published; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider2.GetClientMessages(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Gets the pending messages for a set of clients.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>
            The pending messages for each of the clients.
            </returns>
        </member>
        <member name="T:FM.WebSync.Server.SessionRequestHandler">
            <summary>
            <see cref="T:FM.WebSync.Server.RequestHandler"/> that provides read-only access to session state in
            <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/>-decorated methods.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.SessionRequestHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins processing a new WebSync request.
            </summary>
            <param name="context">The HTTP context.</param>
            <param name="cb">The callback.</param>
            <param name="extraData">The extra data.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:FM.WebSync.Server.SessionRequestHandler.EndProcessRequest(System.IAsyncResult)">
            <summary>
            Ends processing a WebSync request.
            </summary>
            <param name="result">The asynchronous result.</param>
        </member>
        <member name="M:FM.WebSync.Server.SessionRequestHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes a WebSync request synchronously.
            </summary>
            <param name="context">The HTTP context.</param>
        </member>
        <member name="P:FM.WebSync.Server.SessionRequestHandler.IsReusable">
            <summary>
            Flags the handler as reusable.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.AzureTable.Settings">
            <summary>
            Utility class for retrieving Azure-related provider settings.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Providers.AzureTable.Settings.DevelopmentAccountName">
            <summary>
            The Azure account name used for development storage.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Providers.AzureTable.Settings.DevelopmentAccountKey">
            <summary>
            The Azure account key used for development storage.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetTableBaseAddress(System.String,System.Boolean)">
            <summary>
            Gets the table storage base service URL.
            </summary>
            <param name="accountName">Name of the Azure account.</param>
            <param name="useHttps">If set to <c>true</c> use HTTPS.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetDevelopmentTableBaseAddress(System.String)">
            <summary>
            Gets the development table storage base service URL.
            </summary>
            <param name="accountName">Name of the Azure account.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetBlobBaseAddress(System.String,System.Boolean)">
            <summary>
            Gets the blob storage base service URL.
            </summary>
            <param name="accountName">Name of the Azure account.</param>
            <param name="useHttps">If set to <c>true</c> use HTTPS.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetDevelopmentBlobBaseAddress(System.String)">
            <summary>
            Gets the development blob storage base service URL.
            </summary>
            <param name="accountName">Name of the Azure account.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetQueueBaseAddress(System.String,System.Boolean)">
            <summary>
            Gets the queue storage base service URL.
            </summary>
            <param name="accountName">Name of the Azure account.</param>
            <param name="useHttps">If set to <c>true</c> use HTTPS.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetDevelopmentQueueBaseAddress(System.String)">
            <summary>
            Gets the development queue storage base service URL.
            </summary>
            <param name="accountName">Name of the Azure account.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.IsDevelopment(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Determines whether the provider should use development settings.
            </summary>
            <param name="settings">The provider settings.</param>
            <returns>
            	<c>true</c> if the provider should use development settings; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetAccountName(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the name of the Windows Azure account.
            </summary>
            <param name="settings">The provider settings.</param>
            <returns>The name of the Windows Azure account.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetAccountKey(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the key for the Windows Azure account.
            </summary>
            <param name="settings">The provider settings.</param>
            <returns>The key for the Windows Azure account.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetUseHttps(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets whether or not secure connections should be used.
            </summary>
            <param name="settings">The provider settings.</param>
            <returns>
            	<c>true</c> if the provider should use secure connections; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetManageTables(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets whether or not the provider should manage the Azure tables.
            </summary>
            <param name="settings">The provider settings.</param>
            <returns>
            	<c>true</c> if the provider should manage the Azure tables; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetTableBaseAddress(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the table storage base service URL.
            </summary>
            <param name="settings">The provider settings.</param>
            <returns>The table storage base service URL.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.AzureTable.Settings.GetCredentials(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the Windows Azure credentials.
            </summary>
            <param name="settings">The provider settings.</param>
            <returns>The Windows Azure credentials.</returns>
        </member>
        <member name="T:FM.WebSync.Server.Providers.ClientIdentity">
            <summary>
            The details used to fully identify a client.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Providers.ClientIdentity.ClientId">
            <summary>
            The client identity.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Providers.ClientIdentity.DomainKey">
            <summary>
            The domain key for which the client is valid.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.ClientIdentity"/> class.
            </summary>
            <param name="clientId">The client identity.</param>
            <param name="domainKey">The domain key for which the client is valid.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientIdentity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientIdentity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientIdentity.op_Equality(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="ci1">The first client identity.</param>
            <param name="ci2">The second client identity.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientIdentity.op_Inequality(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="ci1">The first client identity.</param>
            <param name="ci2">The second client identity.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:FM.WebSync.Server.Providers.ClientMessages">
            <summary>
            A mapping of client identities to arrays of messages to deliver.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.ClientMessages"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.ClientMessages"/> class.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:FM.WebSync.Server.Providers.ClientMessages"/> hashtable can contain.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.Add(FM.WebSync.Server.Providers.ClientIdentity,System.Collections.Generic.List{FM.WebSync.Core.Message})">
            <summary>
            Adds a set of messages for a fully-qualified client identity.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.ContainsClientIdentity(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Determines whether the collection contains the fully-qualified client identity.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>
            	<c>true</c> if the collection contains the fully-qualified client identity; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.Remove(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Removes the fully-qualified client identity.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns><c>true</c> if the remove operation was successful; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.TryGetValue(FM.WebSync.Server.Providers.ClientIdentity,System.Collections.Generic.List{FM.WebSync.Core.Message}@)">
            <summary>
            Tries to get the messages for a fully-qualified client identity.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="messages">The messages.</param>
            <returns><c>true</c> if the messages were retrieved successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.ClientMessages.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:FM.WebSync.Server.Providers.ClientMessages.ClientIdentities">
            <summary>
            Gets the fully-qualified client identities.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.ClientMessages.Item(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Gets or sets the messages for a fully-qualified client identity.
            </summary>
            <value></value>
        </member>
        <member name="P:FM.WebSync.Server.Providers.ClientMessages.Count">
            <summary>
            Gets the number of fully-qualified client identities.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.SqlProvider">
            <summary>
            Stateless WebSync provider using SQL Server for client storage and message transfer.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.SqlProvider"/> class.
            </summary>
            <param name="settings">The provider settings.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.ManageSchema">
            <summary>
            Verifies that the database structures are in place.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.ConnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Connects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns><c>true</c> if the client was connected, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.BindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Binds a client to a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to bind.</param>
            <returns>
            The records to which the client was bound.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.UnbindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Unbinds a client from a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to unbind.</param>
            <returns>
            The records from which the client was unbound.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.SubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Subscribes a client to a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels to which the client should be subscribed.</param>
            <returns>
            The channels to which the client was subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.UnsubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Unsubscribes a client from a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels from which the client should be unsubscribed.</param>
            <returns>
            The channels from which the client was unsubscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.DisconnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Disconnects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>
            True if the client was disconnected, false otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.DisconnectIdleClients(System.Int32)">
            <summary>
            Disconnects clients who have exceeded the allowed inactivity threshold,
            returning the removed clients.
            </summary>
            <param name="allowedInactivity">The allowed inactivity threshold.</param>
            <returns>An array of idled clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.VerifyClientExists(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Verifies that a client record exists and returns bound client data
            (JSON-encoded), if any.
            </summary>
            <param name="clientIdentity">The client record to verify.</param>
            <param name="boundRecords">Any key/value pairs bound to the client ID.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>
            	<c>true</c> if the client exists, <c>false</c> otherwise
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.KeepClientAlive(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Keeps the specified clients from idling out.
            </summary>
            <param name="clientIdentity">The fully-qualified client identities.</param>
            <returns>
            	<c>true</c> if the client could be kept alive, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetClientCount(System.String)">
            <summary>
            Gets the number of clients connected for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            The number of clients connected for the domain key.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            The number of clients connected to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            A list of client IDs currently connected.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Fetches the IDs of clients currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of client IDs currently subscribed to a given channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetSubscribedClients(System.String,System.String)">
            <summary>
            Fetches the details of clients currently subscribed to a given channel, including
            any key/value pairs bound to the client ID.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of details about clients currently subscribed to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A list of channels to which the client is subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A hashtable of key/value pairs bound to the client ID.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">if set to <c>true</c> include the publisher as a message recipient.</param>
            <returns>
            	<c>true</c> if the message was published; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.SqlProvider.GetClientMessages(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Gets the pending messages for a set of clients.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>
            The pending messages for each of the clients.
            </returns>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTableProvider">
            <summary>
            WebSync provider using Windows Azure Tables for client state storage and message transfer.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTableProvider"/> class.
            </summary>
            <param name="settings">The provider settings.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.ManageTables">
            <summary>
            Verifies that the table structures are in place.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.ConnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Connects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns><c>true</c> if the client was connected, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.BindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Binds a client to a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to bind.</param>
            <returns>
            The records to which the client was bound.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.UnbindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Unbinds a client from a set of records.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to unbind.</param>
            <returns>
            The records from which the client was unbound.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.SubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Subscribes a client to a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels to which the client should be subscribed.</param>
            <returns>
            The channels to which the client was subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.UnsubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Unsubscribes a client from a set of channels.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels from which the client should be unsubscribed.</param>
            <returns>
            The channels from which the client was unsubscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.DisconnectClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Disconnects a client.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>
            True if the client was disconnected, false otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.DisconnectIdleClients(System.Int32)">
            <summary>
            Disconnects clients who have exceeded the allowed inactivity threshold,
            returning the removed clients.
            </summary>
            <param name="allowedInactivity">The allowed inactivity threshold.</param>
            <returns>An array of idled clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">if set to <c>true</c> include the publisher as a message recipient.</param>
            <returns>
            	<c>true</c> if the message was published; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetClientMessages(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Gets the pending messages for a set of clients.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>
            The pending messages for each of the clients.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.VerifyClientExists(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Verifies that a client record exists and returns bound client data
            (JSON-encoded), if any.
            </summary>
            <param name="clientIdentity">The client record to verify.</param>
            <param name="boundRecords">Any key/value pairs bound to the client ID.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>
            	<c>true</c> if the client exists, <c>false</c> otherwise
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.KeepClientAlive(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Keeps the specified clients from idling out.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>
            	<c>true</c> if the client could be kept alive, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetClientCount(System.String)">
            <summary>
            Gets the number of connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            The number of clients connected to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            A list of client IDs currently connected.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Gets the client IDs subscribed to a given channel.
            </summary>
            <param name="channel">The channel to check.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of client IDs subscribed to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetSubscribedClients(System.String,System.String)">
            <summary>
            Gets the details of any clients subscribed to a given channel.
            </summary>
            <param name="channel">The channel to check.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of details for clients subscribed to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A list of channels to which the client is subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTableProvider.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A hashtable of key/value pairs bound to the client ID.
            </returns>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity">
            <summary>
            Windows Azure Table entity for clients.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity"/> class.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity.PartitionKey">
            <summary>
            Gets or sets the domain key (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity.RowKey">
            <summary>
            Gets or sets the client ID (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity.DomainKey">
            <summary>
            Gets or sets the client's domain key (<b>do not use in Azure queries</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity.ClientId">
            <summary>
            Gets or sets the client ID (<b>do not use in Azure queries</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientEntity.LastActivity">
            <summary>
            Gets or sets the date/time of the last client activity.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientServiceContext">
            <summary>
            Windows Azure Table service context for clients.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientServiceContext.#ctor(System.String,Microsoft.WindowsAzure.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientServiceContext"/> class.
            </summary>
            <param name="baseAddress">The base address for queries.</param>
            <param name="credentials">The Azure account credentials.</param>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.ClientServiceContext.TableName">
            <summary>
            The table name for the service context.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity">
            <summary>
            Windows Azure Table entity for published messages.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity"/> class.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity.PartitionKey">
            <summary>
            Gets or sets the partition key (should be an empty string).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity.RowKey">
            <summary>
            Gets or sets a random GUID (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity.MessageId">
            <summary>
            Gets or sets the message ID (<b>do not use in Azure queries</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity.ClientIds">
            <summary>
            Gets or sets the IDs to whom the message has been delivered.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageEntity.DomainKey">
            <summary>
            The domain key for which this delivered message is valid.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageServiceContext">
            <summary>
            Windows Azure Table service context for delivered messages.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageServiceContext.#ctor(System.String,Microsoft.WindowsAzure.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageServiceContext"/> class.
            </summary>
            <param name="baseAddress">The base address for queries.</param>
            <param name="credentials">The Azure account credentials.</param>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.DeliveredMessageServiceContext.TableName">
            <summary>
            The table name for the service context.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity">
            <summary>
            Windows Azure Table entity for published messages.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity"/> class.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.PartitionKey">
            <summary>
            Gets or sets the partition key (should be an empty string).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.RowKey">
            <summary>
            Gets or sets the message ID (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.MessageId">
            <summary>
            Gets or sets the message ID (<b>do not use in Azure queries</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.MessageJson">
            <summary>
            Gets or sets the message in JSON format.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.ClientIds">
            <summary>
            The IDs of the clients to whom this message should be delivered.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.PublishedOn">
            <summary>
            Gets or sets the date/time when this message was published.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageEntity.DomainKey">
            <summary>
            The domain key for which this published message is valid.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageServiceContext">
            <summary>
            Windows Azure Table service context for published messages.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageServiceContext.#ctor(System.String,Microsoft.WindowsAzure.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageServiceContext"/> class.
            </summary>
            <param name="baseAddress">The base address for queries.</param>
            <param name="credentials">The Azure account credentials.</param>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.PublishedMessageServiceContext.TableName">
            <summary>
            The table name for the service context.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity">
            <summary>
            Windows Azure Table entity for subscriptions.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity"/> class.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity.PartitionKey">
            <summary>
            Gets or sets the domain key (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity.RowKey">
            <summary>
            Gets or sets a random GUID (<b>only use in Azure queries with encoded values</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity.DomainKey">
            <summary>
            Gets or sets the client's domain key (<b>do not use in Azure queries</b>).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity.ClientId">
            <summary>
            Gets or sets the client ID.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionEntity.Channel">
            <summary>
            Gets or sets the channel.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionServiceContext">
            <summary>
            Windows Azure Table service context for subscriptions.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionServiceContext.#ctor(System.String,Microsoft.WindowsAzure.StorageCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionServiceContext"/> class.
            </summary>
            <param name="baseAddress">The base address for queries.</param>
            <param name="credentials">The Azure account credentials.</param>
        </member>
        <member name="P:FM.WebSync.Server.Providers.Stateless.AzureTable.SubscriptionServiceContext.TableName">
            <summary>
            The table name for the service context.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.RequestParser">
            <summary>
            Contains methods for parsing incoming WebSync messages or publications.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.RequestParser.DeserializeIncoming(System.Web.HttpRequestBase,FM.WebSync.Core.Message[]@,FM.WebSync.Core.Publication[]@)">
            <summary>
            Deserializes the incoming messages or publications.
            </summary>
            <param name="request">The request with incoming data.</param>
            <param name="messages">The deserialized messages.</param>
            <param name="publications">The deserialized publications.</param>
            <returns><c>true</c> if the deserialization succeeded; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:FM.WebSync.Server.SignatureException">
            <summary>
            Specialized exception for cases where <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/>- or
            <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/>-decorated methods don't match the
            required method signature.
            </summary>
            <remarks>
            <para>
            The required method signature for
            <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/>-decorated
            methods is public static void (object, WebSyncEventArgs).
            </para>
            <para>
            The required method signature for
            <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/>-decorated
            methods is public static void (object, WebSyncScriptModifierArgs).
            </para>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Server.SignatureException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.SignatureException"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.SignatureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.SignatureException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:FM.WebSync.Server.SignatureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.SignatureException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:FM.WebSync.Server.WebSyncClient">
            <summary>
            A server-side representation of a WebSync client.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Bind``1(System.String,``0)">
            <summary>
            Binds the client to a record.
            </summary>
            <typeparam name="T">The type of the record value.</typeparam>
            <param name="key">The key of the record to bind.</param>
            <param name="value">The value of the record to bind.</param>
            <returns><c>true</c> if the client was bound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Bind``1(System.String,``0,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds the client to a record.
            </summary>
            <typeparam name="T">The type of the record value.</typeparam>
            <param name="key">The key of the record to bind.</param>
            <param name="value">The value of the record to bind.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the client was bound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Bind(System.String,System.String)">
            <summary>
            Binds the client to a record.
            </summary>
            <param name="key">The key of the record to bind.</param>
            <param name="valueJson">The value of the record to bind (in JSON format).</param>
            <returns><c>true</c> if the client was bound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Bind(System.String,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds the client to a record.
            </summary>
            <param name="key">The key of the record to bind.</param>
            <param name="valueJson">The value of the record to bind (in JSON format).</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the client was bound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Bind(FM.WebSync.Core.Record)">
            <summary>
            Binds the client to a record.
            </summary>
            <param name="record">The record to bind.</param>
            <returns><c>true</c> if the client was bound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Bind(FM.WebSync.Core.Record,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds the client to a record.
            </summary>
            <param name="record">The record to bind.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the client was bound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Bind(FM.WebSync.Core.Record[])">
            <summary>
            Binds the client to an array of records.
            </summary>
            <param name="records">The records to bind.</param>
            <returns>The records to which the client was bound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unbind(System.String)">
            <summary>
            Unbinds the client from a record.
            </summary>
            <param name="key">The key of the record to unbind.</param>
            <returns><c>true</c> if the client was unbound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unbind(System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Unbinds the client from a record.
            </summary>
            <param name="key">The key of the record to unbind.</param>
            <param name="unboundRecords">The record(s) from which the client was unbound.</param>
            <returns><c>true</c> if the client was unbound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unbind(FM.WebSync.Core.Record)">
            <summary>
            Unbinds the client from a record.
            </summary>
            <param name="record">The record to unbind.</param>
            <returns><c>true</c> if the client was unbound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unbind(FM.WebSync.Core.Record,FM.WebSync.Core.Record[]@)">
            <summary>
            Unbinds the client from a record.
            </summary>
            <param name="record">The record to unbind.</param>
            <param name="unboundRecords">The record(s) from which the client was unbound.</param>
            <returns><c>true</c> if the client was unbound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unbind(FM.WebSync.Core.Record[])">
            <summary>
            Unbinds the client from an array of records.
            </summary>
            <param name="records">The records to unbind.</param>
            <returns>The records from which the client was unbound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Subscribe(System.String)">
            <summary>
            Subscribes a client to a channel.
            </summary>
            <param name="channel">The channel to subscribe.</param>
            <returns><c>true</c> if the client was subscribed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Subscribe(System.String,System.String[]@)">
            <summary>
            Subscribes a client to a channel.
            </summary>
            <param name="channel">The channel to subscribe.</param>
            <param name="subscribedChannels">The channel(s) to which the client was subscribed.</param>
            <returns><c>true</c> if the client was subscribed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Subscribe(System.String[])">
            <summary>
            Subscribes a client to a set of channels.
            </summary>
            <param name="channels">The channels to subscribe.</param>
            <returns>The channels to which the client was subscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unsubscribe(System.String)">
            <summary>
            Unsubscribes a client from a channel.
            </summary>
            <param name="channel">The channel to unsubscribe.</param>
            <returns><c>true</c> if the client was unsubscribed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unsubscribe(System.String,System.String[]@)">
            <summary>
            Unsubscribes a client from a channel.
            </summary>
            <param name="channel">The channel to unsubscribe.</param>
            <param name="unsubscribedChannels">The channel(s) from which the client was unsubscribed.</param>
            <returns><c>true</c> if the client was unsubscribed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.Unsubscribe(System.String[])">
            <summary>
            Unsubscribes a client from a set of channels.
            </summary>
            <param name="channels">The channels to unsubscribe.</param>
            <returns>The channels from which the client was unsubscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.GetSubscribedChannels">
            <summary>
            Gets the client's subscribed channels.
            </summary>
            <returns>The client's subscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.GetBoundRecords">
            <summary>
            Gets the client's bound records.
            </summary>
            <returns>The client's bound records.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.GetBoundRecord(System.String)">
            <summary>
            Gets a record from the client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The bound record.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.GetBoundValueJson(System.String)">
            <summary>
            Gets a serialized value stored in the client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The value of the bound record (in JSON format).</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.GetBoundValue``1(System.String)">
            <summary>
            Deserializes and returns a value serialized in the client's bound records.
            </summary>
            <typeparam name="T">The type of the value serialized in the client's bound records.</typeparam>
            <param name="key">The key used to retrieve the serialized value.</param>
            <returns>The deserialized value in the bound record.</returns>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncClient.TryGetBoundValue``1(System.String,``0@)">
            <summary>
            Deserializes and returns a value serialized in the client's bound records.
            </summary>
            <typeparam name="T">The type of the value serialized in the client's bound records.</typeparam>
            <param name="key">The key used to retrieve the serialized value.</param>
            <param name="value">The deserialized value in the bound record.</param>
            <returns><c>true</c> if the deserialization was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncClient.Id">
            <summary>
            The unique client identity.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncClient.DomainKey">
            <summary>
            The domain key for which the client is valid.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.WebSyncMethodContainerAttribute">
            <summary>
            Declares a type within an assembly to contain methods decorated by either
            <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/> or <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/>.
            </summary>
            <remarks>
            <para>
            This assembly-level attribute is required for assemblies that contain custom
            methods when WebSync is configured to run with
            <tt>targetedScan=true</tt> (see web.config options). Only assemblies which declare
            this attribute will be checked for <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/>-
            or <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/>-decorated methods, and only within
            the type specified.
            </para>
            <para>
            This attribute can be defined multiple times if multiple types contain decorated
            WebSync methods.
            </para>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.WebSyncMethodContainerAttribute.Type">
            <summary>
            The type containing event and script modifier methods.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncMethodContainerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.WebSyncMethodContainerAttribute"/> class.
            </summary>
            <param name="type">The type containing WebSync event and/or script modifier methods.</param>
        </member>
        <member name="T:FM.WebSync.Server.ScriptType">
            <summary>
            The WebSync script type.
            </summary>
            <remarks>
            <para>
            This enumeration describes all possible WebSync script types delivered by
            the <see cref="T:FM.WebSync.Server.ClientHandler"/>.
            </para>
            <para>
            Script types can be combined using the bitwise OR (|) operator. This can be
            useful when using <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/> to define server-side
            script modifier methods, as the same code can be used for multiple script types.
            </para>
            <para>
            The following example illustrates combining script types in a single script
            modifier method.
            </para>
            <example>
            <code>
            [WebSyncScriptModifier(ScriptType.Client | ScriptType.Frame)]
            public static void LogDelivery(object sender, WebSyncScriptModifier args)
            {
                // log the delivery
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ScriptType.Client">
            <summary>
            Indicates that the script is the client JavaScript.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.ScriptType.Frame">
            <summary>
            Indicates that the script is the supporting HTML IFrame.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.EmbeddedResource">
            <summary>
            Contains methods to assist with embedded resource management.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.EmbeddedResource.GetString(System.Reflection.Assembly,System.String)">
            <summary>
            Gets an embedded resource.
            </summary>
            <param name="assembly">The assembly in which the embedded source is located.</param>
            <param name="name">The case-sensitive name of the manifest resource being requested.</param>
            <returns>The contents of the embedded resource.</returns>
        </member>
        <member name="T:FM.WebSync.Server.WebSyncScriptModifierArgs">
            <summary>
            Arguments for methods decorated with <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncScriptModifierArgs.Body">
            <summary>
            The main body of the script. This content may be encoded/gzipped/compressed
            before being delivered to the client, so ensure your JavaScript is valid
            (including semi-colons!).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncScriptModifierArgs.Header">
            <summary>
            The header to append above the body.  This is useful for copyright notices,
            authorship, etc.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncScriptModifierArgs.HttpRequest">
            <summary>
            The current HTTP request over which the script will be delivered.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.WebSyncScriptModifierAttribute">
            <summary>
            Declares a static method to be invoked on <see cref="T:FM.WebSync.Server.ClientHandler"/> events related
            to JavaScript client delivery to browser-based clients.
            </summary>
            <remarks>
            <para>
            Decorating a method with this attribute will cause it to attach to the specified
            <see cref="P:FM.WebSync.Server.WebSyncScriptModifierAttribute.ScriptType"/> and execute whenever that <see cref="P:FM.WebSync.Server.WebSyncScriptModifierAttribute.ScriptType"/> is
            requested by a new browser-based client.
            Decorated methods can be declared anywhere, but the recommended practice is to create
            a static containing class (i.e. <tt>WebSyncMethods</tt>) that houses all
            decorated methods. If WebSync is configured to run with <tt>targetedScan=true</tt> (see
            web.config options), then it is necessary to define the assembly-level
            <see cref="T:FM.WebSync.Server.WebSyncMethodContainerAttribute"/> for each class containing WebSync
            script modifier methods.
            </para>
            <para>
            Use of this attribute is intended for application developers writing custom code
            as well as third-party WebSync extension developers. When writing a third-party
            extension for distribution, defining <see cref="T:FM.WebSync.Server.WebSyncMethodContainerAttribute"/>
            is not optional.
            </para>
            <example>
            <code>
            [WebSyncScriptModifier(ScriptType.Client)]
            public static void MyMethod(object sender, WebSyncScriptModifierArgs args)
            {
                // append to the client javascript here
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncScriptModifierAttribute.#ctor(FM.WebSync.Server.ScriptType)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/> class.
            </summary>
            <param name="scriptType">The script type(s) to which the method should attach.</param>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncScriptModifierAttribute.#ctor(FM.WebSync.Server.ScriptType,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/> class.
            </summary>
            <param name="scriptType">The script type(s) to which the method should attach.</param>
            <param name="priority">The priority with which the method should execute (lowest values execute first).</param>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncScriptModifierAttribute.ScriptType">
            <summary>
            The script type(s) to which the method should attach.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncScriptModifierAttribute.Priority">
            <summary>
            The priority with which the method should execute (lowest values execute first).
            Defaults to (uint.MaxValue - uint.MinValue) / 2.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.WebSyncEventArgs">
            <summary>
            Arguments for methods decorated with <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventArgs.EventType">
            <summary>
            The type of event being raised.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventArgs.Messages">
            <summary>
            The messages (requests or responses) associated with the event.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventArgs.Source">
            <summary>
            The originating source of the event.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventArgs.Forced">
            <summary>
            Whether or not the event was forced by an external trigger and therefore ignores
            any changes to <see cref="P:FM.WebSync.Core.BaseMessage.Successful"/> (cannot be cancelled).
            </summary>
            <remarks>
            <para>
            This property is <c>true</c> under very specific conditions:
            </para>
            <list>
            <item>
            A client disconnecting with subscribed channels forces an implicit unsubscribe
            of those channels. If a disconnecting client was subscribed to any channels,
            then after <see cref="F:FM.WebSync.Server.EventType.BeforeDisconnect"/> with
            <see cref="F:FM.WebSync.Server.EventSource.Client"/> is fired,
            <see cref="F:FM.WebSync.Server.EventType.BeforeUnsubscribe"/> and 
            <see cref="F:FM.WebSync.Server.EventType.AfterUnsubscribe"/> with
            <see cref="F:FM.WebSync.Server.EventSource.Client"/> will be fired sequentially with this property
            set to <c>true</c>.
            </item>
            <item>
            A client being disconnected due to idling forces a disconnect as well as an
            implicit unsubscribe of any subscribed channels. If an idling client was
            subscribed to any channels,
            <see cref="F:FM.WebSync.Server.EventType.BeforeDisconnect"/>,
            <see cref="F:FM.WebSync.Server.EventType.BeforeUnsubscribe"/>,
            <see cref="F:FM.WebSync.Server.EventType.AfterUnsubscribe"/>,
            <see cref="F:FM.WebSync.Server.EventType.AfterDisconnect"/> with
            <see cref="F:FM.WebSync.Server.EventSource.Idler"/> will be fired sequentially with this property
            set to <c>true</c>. If an idling client was not subscribed to any channels,
            <see cref="F:FM.WebSync.Server.EventType.BeforeUnsubscribe"/> and
            <see cref="F:FM.WebSync.Server.EventType.AfterUnsubscribe"/> will not fire.
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventArgs.HttpContext">
            <summary>
            The current HTTP context for the request/response. This is set to <c>null</c>
            if <see cref="T:FM.WebSync.Server.EventSource"/> is <see cref="F:FM.WebSync.Server.EventSource.Server"/> or
            <see cref="F:FM.WebSync.Server.EventSource.Idler"/>/ since they are local event sources and do
            not involve HTTP.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventArgs.DomainKey">
            <summary>
            The domain key associated with the request/response.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventArgs.Client">
            <summary>
            Details about the client making the request. This is set to <c>null</c>
            the action does not involve a client:
            <list>
            <item>Client connect requests (<see cref="F:FM.WebSync.Server.EventType.BeforeConnect"/>)</item>
            <item>Publisher publish requests (<see cref="F:FM.WebSync.Server.EventType.BeforePublish"/> with <see cref="F:FM.WebSync.Server.EventSource.Publisher"/>)</item>
            <item>Server-side publish requests (<see cref="F:FM.WebSync.Server.EventType.BeforePublish"/> with <see cref="F:FM.WebSync.Server.EventSource.Server"/>)</item>
            </list>
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Execution">
            <summary>
            The manner in which the method should be executed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Execution.FireAndForget">
            <summary>
            Indicates that the server should execute the method asynchronously
            and proceed immediately without waiting for it to return.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.Execution.Normal">
            <summary>
            Indicates that the server should execute the method synchronously
            and proceed when it returns.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.EventType">
            <summary>
            The WebSync event type.
            </summary>
            <remarks>
            <para>
            This enumeration describes all possible WebSync server-side events triggered by
            clients, publishers, server-side methods, and the idling client detector.
            (See <see cref="T:FM.WebSync.Server.EventSource"/> for descriptions of the sources that can trigger
            events.)
            </para>
            <para>
            Event types can be combined using the bitwise OR (|) operator. This can be especially
            useful when using <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/> to define server-side event
            methods, as the same code can be used for multiple event types.
            </para>
            <para>
            The following example illustrates combining event types in a single event method.
            </para>
            <example>
            <code>
            [WebSyncEvent(EventType.AfterSubscribe | EventType.AfterUnsubscribe)]
            public static void NotifySubscriptionChange(object sender, WebSyncEventArgs args)
            {
                // publish notification that a client has subscribed or unsubscribed
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.EventType.BeforeConnect">
            <summary>
            Indicates that connect (new client) requests are about to be processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.BeforeBind">
            <summary>
            Indicates that bind requests are about to be processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.BeforeUnbind">
            <summary>
            Indicates that unbind requests are about to be processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.BeforeSubscribe">
            <summary>
            Indicates that subscribe requests are about to be processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.BeforePublish">
            <summary>
            Indicates that publish requests are about to be processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.BeforeUnsubscribe">
            <summary>
            Indicates that unsubscribe requests are about to be processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.BeforeDisconnect">
            <summary>
            Indicates that disconnect requests are about to be processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AfterConnect">
            <summary>
            Indicates that connect (new client) requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AfterBind">
            <summary>
            Indicates that bind requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AfterUnbind">
            <summary>
            Indicates that unbind requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AfterSubscribe">
            <summary>
            Indicates that subscribe requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AfterPublish">
            <summary>
            Indicates that publish requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AfterUnsubscribe">
            <summary>
            Indicates that unsubscribe requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AfterDisconnect">
            <summary>
            Indicates that disconnect requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AllBefore">
            <summary>
            Indicates that requests are about to be processed. Useful for custom authentication.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.AllAfter">
            <summary>
            Indicates that requests have been processed.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventType.All">
            <summary>
            Indicates that requests are about to be or have been processed.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.EventSource">
            <summary>
            The originating source of an event.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventSource.Client">
            <summary>
            Indicates that the source is a WebSync client.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventSource.Publisher">
            <summary>
            Indicates that the source is a WebSync publisher.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventSource.Server">
            <summary>
            Indicates that the source is a direct server-side method.
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.EventSource.Idler">
            <summary>
            Indicates that the source is the idling client detector.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.FunnelQueue`1">
            <summary>
            Special list that allows multiple producers and a single consumer that
            can remove nodes from anywhere in the queue. This queue is threadsafe for lots of adders and a single remover.
            </summary>
            <typeparam name="T">The type of values in the queue.</typeparam>
        </member>
        <member name="M:FM.WebSync.Server.FunnelQueue`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.FunnelQueue`1"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.FunnelQueue`1.Add(`0)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:FM.WebSync.Server.FunnelQueue`1.Remove(FM.WebSync.Server.FunnelQueue{`0}.Node,FM.WebSync.Server.FunnelQueue{`0}.Node)">
            <summary>
            Removes the specified node.
            </summary>
            <param name="node">The node to remove.</param>
            <param name="previousNode">The previous node.</param>
            <returns>The removed node.</returns>
        </member>
        <member name="M:FM.WebSync.Server.FunnelQueue`1.RemoveAll">
            <summary>
            Removes all nodes from the queue.
            </summary>
            <returns>The list of removed nodes.</returns>
        </member>
        <member name="P:FM.WebSync.Server.FunnelQueue`1.First">
            <summary>
            Gets the first node in the queue.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.FunnelQueue`1.Length">
            <summary>
            Gets the length of the queue.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.FunnelQueue`1.Node">
            <summary>
            A node within the <see cref="T:FM.WebSync.Server.FunnelQueue`1"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.FunnelQueue`1.Node.Value">
            <summary>
            Gets or sets the node value.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.FunnelQueue`1.Node.Next">
            <summary>
            Gets the next node.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Config">
            <summary>
            WebSync configuration section definition.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Config.RefreshCurrent">
            <summary>
            Refreshes the current WebSync configuration.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Config.GetHttpHandlerPath(System.String)">
            <summary>
            Retrieves the path of an HTTP handler in the current-scope web configuration whose type is or inherits from the provided base type.
            </summary>
            <param name="baseType">The type or parent type of the HTTP handler.</param>
            <returns>The path of the discovered HTTP handler.</returns>
        </member>
        <member name="P:FM.WebSync.Server.Config.Current">
            <summary>
            Shortcut to retrieve the current WebSync configuration.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Config.Server">
            <summary>
            The server configuration.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Config.XmlNamespace">
            <summary>
            The XML namespace.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Configuration.ServerConfig">
            <summary>
            Server configuration properties.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.ServerConfig.GetTargetedScan">
            <summary>
            Get the targetedScan property as an enumeration.
            </summary>
            <returns>The targetedScan property as an enumeration.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.ServerConfig.SetTargetedScan(FM.WebSync.Server.Configuration.TargetedScan)">
            <summary>
            Sets the targetedScan property using an enumeration.
            </summary>
            <param name="targetedScan">The targetedScan property as an enumeration.</param>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.IsSelfHosted">
            <summary>
            Gets or sets whether to omit execution of IIS specific functionality.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.ProviderType">
            <summary>
            Gets or sets the type of the WebSync provider. Defaults to FM.WebSync.Server.Providers.Sticky.InProcProvider.
            </summary>
            <value>The type of the WebSync provider.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.ProviderSettings">
            <summary>
            Gets the provider-specific settings collection. Value values depend on the specific provider specified in the <see cref="P:FM.WebSync.Server.Configuration.ServerConfig.ProviderType"/> setting.
            </summary>
            <value>The provider-specific settings collection.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.Host">
            <summary>
            Gets or sets the host JavaScript clients are instructed to connect to.
            Only the domain itself is required (eg. www.example.com, not http://www.example.com/).
            If left unspecified, this value will be guessed as best as possible by analyzing the incoming 
            request's url.
            </summary>
            <value>The host JavaScript clients are instructed to connect to.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.StreamHost">
            <summary>
            Gets or sets the stream host JavaScript clients are instructed to stream over. Defaults to "", which means the host
            will be left unset, and the JavaScript client is resposible for attempting to figure out what the value should be.
            Only the domain itself is required (eg. www.example.com, not http://www.example.com/). See the JavaScript documentation
            on the <tt>stream</tt> property of the <tt>initialize</tt> method for details on how the client determines what stream
            host to use.
            </summary>
            <value>The stream host JavaScript clients are instructed to stream over.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.Timeout">
            <summary>
            Gets or sets the timeout period during which a client stream request can gather messages. Defaults to 25000 (25s).
            </summary>
            <value>The timeout period during which a client stream request can gather messages.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.ReconnectInterval">
            <summary>
            Gets or sets the interval between a stream message received by the client and its next request. Defaults to 250 (250ms).
            </summary>
            <value>The interval between a stream message received by the client and its next request.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.DistributeInterval">
            <summary>
            Gets or sets interval between distributions of messages to respective clients. Defaults to 100 (100ms).
            </summary>
            <value>The interval between distributions of messages to respective clients.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.LatencyBuffer">
            <summary>
            Gets or sets the latency buffer which allots "grace" periods of time
            for high-latency clients.  Lower values will increase the rate at which
            old clients and messages are cleaned up at the risk of missed messages
            or removed client records for slow clients.  Higher values offer higher
            reliability with potential performance costs. Defaults to 10000 (10s).
            </summary>
            <value>The latency buffer.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.HeartbeatInterval">
            <summary>
            Gets or sets the interval between "heartbeats" that ensure the server node is registered with a remote data store. Defaults to 30000 (30s)
            </summary>
            <value>The interval between "heartbeats" that ensure the server node is registered with a remote data store.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.HttpDirectPublish">
            <summary>
            Gets or sets whether direct publication over HTTP should be allowed. Defaults to false.
            </summary>
            <value>Whether direct publication over HTTP should be allowed.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.PublishToSelf">
            <summary>
            Gets or sets whether clients should receive messages they published. Defaults to false.
            </summary>
            <value>Whether direct publication over HTTP should be allowed.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.TargetedScan">
            <summary>
            Gets or sets whether WebSync will automatically scan all referenced assemblies, types
            and methods during its initialization OR just target specific types marked by
            <see cref="T:FM.WebSync.Server.WebSyncMethodContainerAttribute"/> OR ignore certain black-listed Microsoft/Windows/Frozen
            Mountain assemblies.  The scan searches for
            event and script modifier methods.  Defaults to false (untargeted scan).
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.ServerConfig.ConnectionStringName">
            <summary>
            Gets or sets the name of the connection string to be used with the SqlProvider.
            </summary>
            <value>The name of the connection string to be used with the SqlProvider.</value>
        </member>
        <member name="T:FM.WebSync.Server.Configuration.Setting">
            <summary>
            <see cref="T:FM.WebSync.Server.Configuration.ServerConfig"/> setting.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.Setting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Configuration.Setting"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.Setting.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Configuration.Setting"/> class.
            </summary>
            <param name="name">The setting name.</param>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.Setting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Configuration.Setting"/> class.
            </summary>
            <param name="name">The setting name.</param>
            <param name="value">The setting value.</param>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.Setting.Name">
            <summary>
            Gets or sets the name of the setting.
            </summary>
            <value>The setting name.</value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.Setting.Value">
            <summary>
            Gets or sets the value of the setting.
            </summary>
            <value>The setting value.</value>
        </member>
        <member name="T:FM.WebSync.Server.Configuration.SettingsCollection">
            <summary>
            A collection of nested <see cref="T:FM.WebSync.Server.Configuration.Setting">Settings</see> for the <see cref="T:FM.WebSync.Server.Configuration.ServerConfig"/>.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.SettingsCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.SettingsCollection.CreateNewElement(System.String)">
            <summary>
            Creates a new <see cref="T:System.Configuration.ConfigurationElement"/> when overridden in a derived class.
            </summary>
            <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement"/> to create.</param>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.SettingsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.SettingsCollection.Add(FM.WebSync.Server.Configuration.Setting)">
            <summary>
            Adds the specified setting.
            </summary>
            <param name="setting">The setting.</param>
        </member>
        <member name="M:FM.WebSync.Server.Configuration.SettingsCollection.ToCollection">
            <summary>
            Converts the settings collection to a NameValueCollection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.SettingsCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Configuration.ConfigurationElementCollectionType"/> of this collection.
            </returns>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.SettingsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:FM.WebSync.Server.Configuration.Setting"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:FM.WebSync.Server.Configuration.SettingsCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:FM.WebSync.Server.Configuration.Setting"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:FM.WebSync.Server.ClientHandler">
            <summary>
            HTTP handler that services requests for the JavaScript/HTML client.
            </summary>
            <remarks>
            <para>
            This handler is intended to deliver the JavaScript/HTML client to web pages
            that integrate with WebSync. The path to the handler is specified by its
            registration in web.config (system.web/httpHandlers or system.webServer/handlers).
            </para>
            <para>
            It is possible to attach custom code to the delivery process. This allows the
            JavaScript client and HTML frame to be modified en-route to the client requesting
            them. Simply declare a static method and decorate it with
            <see cref="T:FM.WebSync.Server.WebSyncScriptModifierAttribute"/>.
            </para>
            <para>
            If HttpContext.Session data is required in custom code, use
            <see cref="T:FM.WebSync.Server.SessionClientHandler"/> instead of this class in web.config. Note that
            the overhead associated with .NET session handling will decrease performance.
            </para>
            <para>
            See below for an example of how to attach to the client delivery and obfuscate
            the JavaScript code.
            </para>
            <example>
            <code>
            [WebSyncScriptModifier(ScriptType.Client)]
            public static void ClientCompressor(object sender, WebSyncScriptModifierArgs args)
            {
                // MyObfuscator is a custom class
                args.Body = MyObfuscator.Obfuscate(args.Body);
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Server.ClientHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes a client request synchronously.
            </summary>
            <param name="context">The HTTP context.</param>
        </member>
        <member name="M:FM.WebSync.Server.ClientHandler.ProcessRequestBase(System.Web.HttpContextBase)">
            <summary>
            Processes a client request synchronously.
            </summary>
            <param name="context">The HTTP context base.</param>
        </member>
        <member name="P:FM.WebSync.Server.ClientHandler.IsReusable">
            <summary>
            Flags the handler as reusable.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Envelope">
            <summary>
            Message wrapper which includes contextual information relevant to delivery.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Envelope.Message">
            <summary>
            The message to be distributed.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Envelope.PublisherIdentity">
            <summary>
            The unique client identifier for the publisher.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Envelope.IncludePublisher">
            <summary>
            Whether or not to include the publisher when distributing the message.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.ErrorCode">
            <summary>
            Defines all possible error codes used in WebSync. Error codes are grouped into 4 categories:
            <list type="number">
            <item>600-level: indicate that the request could not be started</item>
            <item>700-level: indicate that a provider error occurred while the request was processing</item>
            <item>800-level: indicate that the request was denied by an event handler</item>
            <item>900-level: indicate that an internal server error occurred when processing the request</item>
            </list>
            </summary>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.DeserializationFailure">
            <summary>
            This error occurs when the message and/or publication sent to WebSync
            was invalid JSON.
            </summary>
            <remarks>
            The error text is:
            <code>601::Could not deserialize incoming messages or publications.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.EmptyRequest">
            <summary>
            This error occurs when WebSync receives an empty POST or GET request.
            </summary>
            <remarks>
            The error text is:
            <code>602::Incoming request was empty.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.InvalidClientId">
            <summary>
            This error indicates that the client ID specified in the request was not valid on the server. 
            This can occur if 1) the server was reset and lost all its client information or 2) the client passed an invalid client
            ID after awakening from standby or some other client failure. Typically, this error will not be fatal, and will just 
            cause the client to reconnect.
            </summary>
            <remarks>
            The error text is:
            <code>604::Invalid client ID.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.PublisherNotAllowed">
            <summary>
            This error occurs when an attempt is made to do a direct HTTP publish to a WebSync server, but direct 
            HTTP publishing has been disabled. To enable direct HTTP publishing, edit your Web.config’s <tt>httpDirectPublish</tt>
            entry as described in Security.
            </summary>
            <remarks>
            The error text is:
            <code>606::HTTP publication is disabled. Check your web.config settings.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.UserLimit">
            <summary>
            This error occurs when the client limit is reached for the Community Edition.
            </summary>
            <remarks>
            The error text is:
            <code>607::User limit reached. The Community Edition is limited to 10 concurrent users.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.DomainKey">
            <summary>
            This error occurs when an attempt to use domain keys other than the default are used in the Community Edition.
            </summary>
            <remarks>
            The error text is:
            <code>608::Invalid domain key. The Community Edition is limited to the default domain key.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.NoRequestHandler">
            <summary>
            This error occurs when the request handler failed to initialize. Typically, this results from an incorrectly configured 
            web.config, such as missing handlers, invalid types for the handlers, etc. If logging is configured, there will be additional 
            details available in your logs.
            </summary>
            <remarks>
            The error text is:
            <code>609::The request handler could not be initialized. Check your web.config settings and logs.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.NoThreadPool">
            <summary>
            This error occurs when the thread pool used for managing incoming requests could not be initialized.
            Typically, this results from an incorrectly configured web.config, such as missing handlers, invalid 
            handler types, etc. If logging is configured, there will be additional details available in your logs.
            </summary>
            <remarks>
            The error text is:
            <code>610::The thread pool has not been initialized. Check your web.config handler settings.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.HandshakeFailure">
            <summary>
            This error occurs when the client's attempt to connect to the server was denied. This could be for any number of reasons; 
            check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>701::The handshake could not be completed.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.NoConnectionType">
            <summary>
            This error occurs when the client does not support any of the connection types supported by the server. 
            This should never occur when using WebSync Server in association with a WebSync client. Check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>702::A common connection type could not be negotiated.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.BindFailure">
            <summary>
            This error indicates that the client attempted to bind a key/value to itself, but failed. Check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>The record(s) could not be bound.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.UnbindFailure">
            <summary>
            This error indicates that the client attempted to unbind a key from itself, but failed. Check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>The record(s) could not be unbound.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.SubscribeFailure">
            <summary>
            This error indicates that the client attempted to subscribe to a channel, but failed. Check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>721::The channel(s) could not be subscribed.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.PublishFailure">
            <summary>
            This error indicates that a client attempted to publish to a channel, but failed. Check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>731::The data could not be published.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.UnsubscribeFailure">
            <summary>
            This error indicates that the client attempted to unsubscribe from a channel, but failed. Check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>741::The channel(s) could not be unsubscribed.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.DisconnectFailure">
            <summary>
            This error indicates that the client attempted to disconnect from the server, but failed. Check your server logs for details.
            </summary>
            <remarks>
            The error text is:
            <code>751::The client could not be disconnected.</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.GenericEventFailed">
            <summary>
            This error indicates that an error occurred or the request was flagged as unsuccessful in an event handler.
            A typical example of this would be authentication failure. 
            The [Anything] represents the actual error text specified by the developer.
            </summary>
            <remarks>
            The error text is:
            <code>801::[Anything].</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.GenericWebSyncException">
            <summary>
            This error occurs when an unexpected exception occurs within WebSync itself.  If this error occurs, more details 
            will be available in the logs (if configured). The [Anything] will contain the error messages from the source of the error.
            This should *never* be seen, so if you do, please contact us.
            </summary>
            <remarks>
            The error text is:
            <code>901::[Anything]</code>
            </remarks>
        </member>
        <member name="F:FM.WebSync.Server.ErrorCode.GenericIISException">
            <summary>
            This error occurs when an unexpected exception occurs within the request handling of IIS.  If this error occurs, more details 
            will be available in the logs (if configured). The [Anything] will contain the error messages from the source of the error.
            </summary>
            <remarks>
            The error text is:
            <code>901::[Anything]</code>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.CachedClient"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.KeepAlive">
            <summary>
            Marks a client as still active.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.GetLastActivity">
            <summary>
            Thread-safe operation to read the date/time of the client's last activity.
            </summary>
            <returns>The date/time of the client's last activity.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.Bind(FM.WebSync.Core.Record)">
            <summary>
            Adds a record to the client's bindings.
            </summary>
            <param name="record">The record to bind.</param>
            <returns><c>true</c> if the record was bound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.Unbind(FM.WebSync.Core.Record)">
            <summary>
            Removes a record from the client's bindings.
            </summary>
            <param name="record">The record to unbind.</param>
            <returns><c>true</c> if the record was unbound; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.Subscribe(System.String)">
            <summary>
            Adds a channel to the client's subscriptions list.
            </summary>
            <param name="channel">The channel to subscribe.</param>
            <returns><c>true</c> if the channel was subscribed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.Unsubscribe(System.String)">
            <summary>
            Removes a channel from the client's subscriptions list.
            </summary>
            <param name="channel">The channel to unsubscribe.</param>
            <returns><c>true</c> if the channel was unsubscribed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.GetSubscribedChannels">
            <summary>
            Retrieves the current list of subscribed channels.
            </summary>
            <returns>An array of currently subscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.GetBoundRecords">
            <summary>
            Retrieves any key/value pairs bound to the client ID.
            </summary>
            <returns>A hashtable of key/value pairs bound to the client ID.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.AddMessage(FM.WebSync.Core.Message)">
            <summary>
            Adds a message to a client's list for pickup.
            </summary>
            <param name="message">The message to deliver.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.CachedClient.PickupMessages">
            <summary>
            Reads and removes any messages waiting for pickup.
            </summary>
            <returns>The list of waiting messages.</returns>
        </member>
        <member name="P:FM.WebSync.Server.Providers.CachedClient.Identity">
            <summary>
            The fully-qualified client identity.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Thread-safe retrieval of client from cache.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>The client if it exists, or null.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.AddClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Thread-safe addition of an initialized client to the local cache.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.RemoveClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Thread-safe removal of a client from the local cache.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>True if the client no longer exists.  False if an error occurred.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.RemoveClients(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Thread-safe removal of a list of clients from the local cache.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetExistingClients">
            <summary>
            Gets a list of currently connected clients.
            </summary>
            <returns>An array of existing clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetClientCount(System.String)">
            <summary>
            Gets the number of clients connected for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>The number of clients connected for a given domain key.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients subscribed to a given channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>The number of clients connected to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetClientIds(System.String)">
            <summary>
            Gets a list of client IDs currently connected.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>The client IDs currently connected.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Gets a list of client IDs currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel by which to filter.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>The client IDs currently subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetSubscribedClients(System.String,System.String)">
            <summary>
            Gets a list of details for clients currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel by which to filter.</param>
            <param name="domainKey">The key for which the channel is valid.</param>
            <returns>The details for the clients currently subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetIdledClients(System.Int32)">
            <summary>
            Thread-safe compilation of any clients that have exceeded the allowed inactivity threshold.
            </summary>
            <param name="allowedInactivity">The number of milliseconds the client is allowed to idle.</param>
            <returns>An array of idled clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.KeepAlive(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Flags a client as having an active request on the server.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>True if the client exists and was updated, false otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.VerifyClientExists(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Checks if a client exists in the cahce.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="boundRecords">Any key/value pairs bound to the client ID.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>
            	<c>true</c> if the client exists; otherwise; <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.BindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Thread-safe addition to a client's bindings in the local cache.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to bind.</param>
            <returns>The bound records.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.UnbindClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Thread-safe removal of a client's bindings in the local cache.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The records to unbind.</param>
            <returns>The unbound records.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.SubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Thread-safe addition to a client's subscriptions in the local cache.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels to subscribe.</param>
            <returns>The subscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.UnsubscribeClient(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Thread-safe removal of a client's subscriptions in the local cache.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The channels to unsubscribe.</param>
            <returns>The unsubscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Gets a list of channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>A list of channels.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Gets any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <returns>Any key/value pairs bound to the client ID.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.DistributeMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Thread-safe distribution of a message.
            </summary>
            <param name="message">The message to distribute.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">Whether to publish to the publisher.</param>
            <returns>True if the message was distributed, false otherwise.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Cache.PickupMessages(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Thread-safe pickup of messages for a given set of clients.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>The picked-up message collection.</returns>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Sticky.InProcProvider">
            <summary>
            WebSync provider using in-memory cache for client state storage and message transfer.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.Startup">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.Shutdown">
            <summary>
            Terminates any threads and releases resources.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetUniqueApplicationId">
            <summary>
            Returns a string that uniquely identifies this application.
            </summary>
            <returns>
            A string that uniquely identifies this application.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.RegisterServer">
            <summary>
            Registers the server with the store.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.Heartbeat">
            <summary>
            Informs the server registrar that this server is still active.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.StoreClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Stores the client details to persistent storage.
            </summary>
            <param name="clientId">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.StoreBoundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-bound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were bound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.StoreUnboundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-unbound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were unbound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.StoreSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-subscribed channels to persistent storage.
            </summary>
            <param name="clientId">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were subscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.StoreUnsubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-unsubscribed channels to persistent storage.
            </summary>
            <param name="clientId">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were unsubscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.StoreDisconnectedClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Flags or deletes the disconnected client in persistent storage.
            </summary>
            <param name="clientId">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.StoreIdleDisconnectedClients(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Flags or deletes the idle-disconnected clients in persistent storage.
            </summary>
            <param name="clientIds">The array of fully-qualified client identities.</param>
            <returns>The client identities that were present and flagged/deleted.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message to all subscribers of a channel.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">True to include the publisher in the delivery list.  False to exclude.</param>
            <returns>
            	<c>true</c> if the message was published; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetExistingLocalClients">
            <summary>
            Fetches a mapping of clients to subscribed channel lists for existing
            clients registered with this server instance.
            </summary>
            <returns>An array of existing clients mapped to this server.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.MigrateClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Migrates a client to this server instance.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="boundRecords">Any records to which the client is bound.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>
            True if the client was migrated successfully, false otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetClientCount(System.String)">
            <summary>
            Gets the number of clients connected for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            The number of clients connected for the domain key.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            The number of clients connected to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            A list of client IDs currently connected.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Fetches the IDs of clients currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of client IDs currently subscribed to a given channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetSubscribedClients(System.String,System.String)">
            <summary>
            Fetches the details of clients currently subscribed to a given channel, including
            any key/value pairs bound to the client ID.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of details about clients currently subscribed to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A list of channels to which the client is subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.InProcProvider.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A hashtable of key/value pairs bound to the client ID.
            </returns>
        </member>
        <member name="T:FM.WebSync.Server.Providers.Sticky.SqlProvider">
            <summary>
            Sticky WebSync provider polling SQL Server for client state storage and message transfer.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.Providers.Sticky.SqlProvider"/> class.
            </summary>
            <param name="settings">The provider settings.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.ManageSchema">
            <summary>
            Verifies that the database structures are in place.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetUniqueApplicationId">
            <summary>
            Returns a string that uniquely identifies this application.
            </summary>
            <returns>
            A string that uniquely identifies this application.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetExistingLocalClients">
            <summary>
            Gets any existing clients registered with this server instance.
            </summary>
            <returns>
            An array of existing clients mapped to this server instance.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.StoreClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Stores the client details to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.StoreDisconnectedClient(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Flags or deletes the disconnected client in persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.StoreIdleDisconnectedClients(FM.WebSync.Server.Providers.ClientIdentity[])">
            <summary>
            Flags or deletes the idle-disconnected clients in persistent storage.
            </summary>
            <param name="clientIdentities">The fully-qualified client identities.</param>
            <returns>The client identities that were present and flagged/deleted.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.StoreBoundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-bound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were bound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.StoreUnboundRecords(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.Record[])">
            <summary>
            Stores the newly-unbound records to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="records">The list of records that were unbound.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.StoreSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-subscribed channels to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were subscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.StoreUnsubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity,System.String[])">
            <summary>
            Stores the newly-unsubscribed channels to persistent storage.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="channels">The list of channels that were unsubscribed.</param>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.MigrateClient(FM.WebSync.Server.Providers.ClientIdentity,FM.WebSync.Core.BoundRecords@,FM.WebSync.Core.SubscribedChannels@)">
            <summary>
            Migrates a client to this server instance.
            </summary>
            <param name="clientIdentity">The fully-qualified client identity.</param>
            <param name="boundRecords">Any records to which the client is bound.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <returns>
            True if the client was migrated successfully, false otherwise.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetClientCount(System.String)">
            <summary>
            Gets the number of clients connected for a given domain key.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            The number of clients connected for the domain key.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the number of clients connected to a channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            The number of clients connected to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetClientIds(System.String)">
            <summary>
            Fetches the IDs of all currently connected clients.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid.</param>
            <returns>
            A list of client IDs currently connected.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Fetches the IDs of clients currently subscribed to a given channel.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of client IDs currently subscribed to a given channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetSubscribedClients(System.String,System.String)">
            <summary>
            Fetches the details of clients currently subscribed to a given channel, including
            any key/value pairs bound to the client ID.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid.</param>
            <returns>
            A list of details about clients currently subscribed to the channel.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetSubscribedChannels(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches the channels to which a client is subscribed.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A list of channels to which the client is subscribed.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.GetBoundRecords(FM.WebSync.Server.Providers.ClientIdentity)">
            <summary>
            Fetches any key/value pairs bound to the client ID.
            </summary>
            <param name="clientIdentity">The fully-qualified unique client identity.</param>
            <returns>
            A hashtable of key/value pairs bound to the client ID.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.RegisterServer">
            <summary>
            Registers the server with the store.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.Heartbeat">
            <summary>
            Informs the server registrar that this server is still active.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.PublishMessage(FM.WebSync.Core.Message,FM.WebSync.Server.Providers.ClientIdentity,System.Boolean)">
            <summary>
            Publishes a message to all subscribers of a channel.
            </summary>
            <param name="message">The message to publish.</param>
            <param name="publisherIdentity">The unique client identifier for the publisher.</param>
            <param name="includePublisher">True to include the publisher in the delivery list.  False to exclude.</param>
            <returns>
            	<c>true</c> if the message was published; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Server.Providers.Sticky.SqlProvider.PickupMessages">
            <summary>
            Picks up messages pending delivery from persistent storage.
            </summary>
            <returns>
            A list of messages in their respective envelopes.
            </returns>
        </member>
        <member name="T:FM.WebSync.Server.Threads.WaitThread">
            <summary>
            Implements a thread for the custom pool that manages requests, returning
            queued messages back to the client, along with errors and timeouts
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Threads.WaitThread.QueueRequest(FM.WebSync.Server.Threads.WaitRequest)">
            <summary>
            Queues a request
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:FM.WebSync.Server.Threads.WaitThread.Loop">
            <summary>
            Loops over the available wait requests, checking for inactivity and queued messages.
            This method should be run sequentially, and no other methods may remove from Waiting.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Utilities">
            <summary>
            Fast method invocation utilities, courtesy of Manual Abadia.
            <a href="http://www.manuelabadia.com/blog/PermaLink,guid,dc72b235-1381-4c91-8706-e36216f49b94.aspx">Link</a>
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.Utilities.FastInvokeHandler">
            <summary>
            Delegate for calling a method that is not known at runtime.
            </summary>
            <param name="target">the object to be called or null if the call is to a static method.</param>
            <param name="parameters">the parameters to the method.</param>
            <returns>the return value for the method or null if it doesn't return anything.</returns>
        </member>
        <member name="T:FM.WebSync.Server.Utilities.FastCreateInstanceHandler">
            <summary>
            Delegate for creating and object at runtime using the default constructor.
            </summary>
            <returns>the newly created object.</returns>
        </member>
        <member name="T:FM.WebSync.Server.Utilities.FastPropertyGetHandler">
            <summary>
            Delegate to get an arbitraty property at runtime.
            </summary>
            <param name="target">the object instance whose property will be obtained.</param>
            <returns>the property value.</returns>
        </member>
        <member name="T:FM.WebSync.Server.Utilities.FastPropertySetHandler">
            <summary>
            Delegate to set an arbitrary property at runtime.
            </summary>
            <param name="target">the object instance whose property will be modified.</param>
            <param name="parameter"></param>
        </member>
        <member name="T:FM.WebSync.Server.Utilities.DynamicCalls">
            <summary>
            Contains methods for dynamic invocation generating IL on the fly.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.Utilities.DynamicCalls.GetMethodInvoker(System.Reflection.MethodInfo)">
            <summary>
            Gets the fast invoke handler for the specified method.
            </summary>
            <param name="methodInfo">The reflected method to generate an invocation handler for.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Utilities.DynamicCalls.GetInstanceCreator(System.Type)">
            <summary>Gets the instance creator delegate that can be use to create instances of the specified type.</summary>
            <param name="type">The type of the objects we want to create.</param>
            <returns>A delegate that can be used to create the objects.</returns>
        </member>
        <member name="M:FM.WebSync.Server.Utilities.DynamicCalls.GetPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Gets the fast get handler for the specified property.
            </summary>
            <param name="propInfo">The reflected property to generate a property getter for.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Utilities.DynamicCalls.GetPropertySetter(System.Reflection.PropertyInfo)">
            <summary>
            Gets the fast set handler for the specified property.
            </summary>
            <param name="propInfo">The reflected property to generate a property setter for.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.Utilities.DynamicCalls.EmitCastToReference(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>Emits the cast to a reference, unboxing if needed.</summary>
            <param name="ilGenerator">The MSIL generator.</param>
            <param name="type">The type to cast.</param>
        </member>
        <member name="M:FM.WebSync.Server.Utilities.DynamicCalls.EmitBoxIfNeeded(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>Boxes a type if needed.</summary>
            <param name="ilGenerator">The MSIL generator.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:FM.WebSync.Server.Utilities.DynamicCalls.EmitFastInt(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>Emits code to save an integer to the evaluation stack.</summary>
            <param name="ilGenerator">The MSIL generator.</param>
            <param name="value">The value to push.</param>
        </member>
        <member name="T:FM.WebSync.Server.RequestHandler">
            <summary>
            HTTP handler that services Bayeux client/publisher requests.
            </summary>
            <remarks>
            <para>
            This handler is intended to be the primary endpoint for all Bayeux clients and
            publishers that integrate with WebSync. The path to the handler is specified by its
            registration in web.config (system.web/httpHandlers or system.webServer/handlers).
            </para>
            <para>
            Several static methods on this class provide easy access to client and server
            manipulation, including:
            </para>
            <list>
            <item>Binding a client to a record
            (<see cref="M:FM.WebSync.Server.RequestHandler.Bind(System.String,FM.WebSync.Core.Record)"/>)</item>
            <item>Unbinding a client from a record
            (<see cref="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,System.String)"/>)</item>
            <item>Subscribing a client to a channel
            (<see cref="M:FM.WebSync.Server.RequestHandler.Subscribe(System.String,System.String)"/>)</item>
            <item>Unsubscribing a client from a channel
            (<see cref="M:FM.WebSync.Server.RequestHandler.Unsubscribe(System.String,System.String)"/>)</item>
            <item>Publishing to a channel
            (<see cref="M:FM.WebSync.Server.RequestHandler.Publish(FM.WebSync.Core.Publication)"/>)</item>
            <item>Getting the total number of clients
            (<see cref="M:FM.WebSync.Server.RequestHandler.GetClientCount"/>)</item>
            <item>Getting the total number of clients subscribed to a channel
            (<see cref="M:FM.WebSync.Server.RequestHandler.GetSubscribedClientCount(System.String)"/>)</item>
            <item>Getting the IDs of all clients
            (<see cref="M:FM.WebSync.Server.RequestHandler.GetClientIds"/>)</item>
            <item>Getting the IDs of all clients subscribed to a channel
            (<see cref="M:FM.WebSync.Server.RequestHandler.GetSubscribedClientIds(System.String)"/>)</item>
            <item>Getting the IDs and bound records of all clients subscribed to a channel
            (<see cref="M:FM.WebSync.Server.RequestHandler.GetSubscribedClients(System.String)"/>)</item>
            <item>Getting a client's bound records
            (<see cref="M:FM.WebSync.Server.RequestHandler.GetBoundRecords(System.String)"/>)</item>
            <item>Getting a client's subscribed channels
            (<see cref="M:FM.WebSync.Server.RequestHandler.GetSubscribedChannels(System.String)"/>)</item>
            </list>
            <para>
            It is possible to attach custom code to the request handling process. This allows the
            requests to be modified on their way to the server, and the responses to be modified
            on their way back to the source client/publisher. To start, simply declare a static
            method and decorate it with <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/>.
            </para>
            <para>
            If HttpContext.Session data is required in custom code, use
            <see cref="T:FM.WebSync.Server.SessionRequestHandler"/> instead of this class in web.config. Note that
            the overhead associated with .NET session handling will decrease performance.
            </para>
            <para>
            See below for an example of how to attach to the <see cref="F:FM.WebSync.Server.EventType.BeforeConnect"/>
            event and authenticate the request.
            </para>
            <example>
            <code>
            [WebSyncEventAttribute(EventType.BeforeConnect)]
            public static void Authenticator(object sender, WebSyncEventArgs args)
            {
                foreach (Message m in args.Messages)
                {
                    if (!Authenticate(m.GetMeta&lt;Credentials&gt;()))
                    {
                        m.Successful = false;
                        m.Error = "Authentication failed.";
                    }
                }
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.ConfigureLog4net">
            <summary>
            Configures log4net using XML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetProviderTypeName">
            <summary>
            Gets the name of the provider type from the configuration.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.LoadType(System.String,System.Reflection.Assembly@)">
            <summary>
            Loads a type from the current set of assemblies.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="assembly">The assembly in which the type was found.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.LoadProvider(System.Type)">
            <summary>
            Loads and initializes a WebSync provider.
            </summary>
            <param name="providerType">The type of the provider to load.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetHttpDirectPublish">
            <summary>
            Gets whether or not HTTP direct publications are allowed according to the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.IsOfficial(System.Reflection.Assembly)">
            <summary>
            Determines whether the specified assembly is the current assembly.
            </summary>
            <param name="assembly">The assembly to test.</param>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish``1(System.String,``0)">
            <summary>
            Publishes data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <typeparam name="T">The type of the data.</typeparam>
            <param name="channel">The channel over which to publish the data.
            Must start with a forward slash (/).</param>
            <param name="data">The data to publish.</param>
            <returns>The generated publication.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish(System.String,System.String)">
            <summary>
            Publishes data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <param name="channel">The channel over which to publish the data.
            Must start with a forward slash (/).</param>
            <param name="dataJson">The data to publish.
            Must be valid JSON.</param>
            <returns>The generated publication.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish(FM.WebSync.Core.Publication)">
            <summary>
            Publishes data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <param name="publication">The publication to publish.</param>
            <returns>The completed publication.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish(FM.WebSync.Core.Publication[])">
            <summary>
            Publishes an array of data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <param name="publications">The publications to publish.</param>
            <returns>The completed publications.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish``1(System.String,``0,System.String)">
            <summary>
            Publishes data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <typeparam name="T">The type of the data.</typeparam>
            <param name="channel">The channel over which to publish the data.
            Must start with a forward slash (/).</param>
            <param name="data">The data to publish.</param>
            <param name="domainKey">The domain key for which the channel is valid. Only necessary when grouping connections.</param>
            <returns>The generated publication.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish(System.String,System.String,System.String)">
            <summary>
            Publishes data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <param name="channel">The channel over which to publish the data.
            Must start with a forward slash (/).</param>
            <param name="dataJson">The data to publish.
            Must be valid JSON.</param>
            <param name="domainKey">The domain key for which the channel is valid. Only necessary when grouping connections.</param>
            <returns>The generated publication.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish(FM.WebSync.Core.Publication,System.String)">
            <summary>
            Publishes data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <param name="publication">The publication to publish.</param>
            <param name="domainKey">The domain key for which the publication is valid. Only necessary when grouping connections.</param>
            <returns>The completed publication.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Publish(FM.WebSync.Core.Publication[],System.String)">
            <summary>
            Publishes an array of data directly.
            </summary>
            <remarks>
            When possible, use this instead of the <see cref="T:FM.WebSync.Core.Publisher"/> as it avoids
            the overhead associated with transferring the data over HTTP.
            </remarks>
            <param name="publications">The publications to publish.</param>
            <param name="domainKey">The domain key for which the publications are valid. Only necessary when grouping connections.</param>
            <returns>The completed publications.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind``1(System.String,System.String,``0)">
            <summary>
            Binds a client to a record.
            </summary>
            <typeparam name="T">The type of the record value.</typeparam>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="value">The value of the record to bind.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind``1(System.String,System.String,``0,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds a client to a record.
            </summary>
            <typeparam name="T">The type of the record value.</typeparam>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="value">The value of the record to bind.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,System.String,System.String)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="valueJson">The value (in JSON format) of the record to bind.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,System.String,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="valueJson">The value (in JSON format) of the record to bind.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,FM.WebSync.Core.Record)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="record">The record to which the client should be bound.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,FM.WebSync.Core.Record,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="record">The record to which the client should be bound.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,FM.WebSync.Core.Record[])">
            <summary>
            Binds a client to a set of records.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="records">The records to which the client should be bound.</param>
            <returns>The records to which the client was bound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind``1(System.String,System.String,``0,System.String)">
            <summary>
            Binds a client to a record.
            </summary>
            <typeparam name="T">The type of the record value.</typeparam>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="value">The value of the record to bind.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind``1(System.String,System.String,``0,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds a client to a record.
            </summary>
            <typeparam name="T">The type of the record value.</typeparam>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="value">The value of the record to bind.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,System.String,System.String,System.String)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="valueJson">The value (in JSON format) of the record to bind.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,System.String,System.String,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="key">The key of the record to bind.</param>
            <param name="valueJson">The value (in JSON format) of the record to bind.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,FM.WebSync.Core.Record,System.String)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="record">The record to which the client should be bound.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,FM.WebSync.Core.Record,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Binds a client to a record.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="record">The record to which the client should be bound.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <param name="boundRecords">The record(s) to which the client was bound.</param>
            <returns><c>true</c> if the bind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Bind(System.String,FM.WebSync.Core.Record[],System.String)">
            <summary>
            Binds a client to a set of records.
            </summary>
            <param name="clientId">The ID of the client to bind.</param>
            <param name="records">The record to which the client should be bound.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <returns>The records to which the client was bound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,System.String)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="key">The key of the record to unbind.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="key">The key of the record to unbind.</param>
            <param name="unboundRecords">The record(s) from which the client was unbound.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,FM.WebSync.Core.Record)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="record">The record from which the client should be unbound.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,FM.WebSync.Core.Record,FM.WebSync.Core.Record[]@)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="record">The record from which the client should be unbound.</param>
            <param name="unboundRecords">The record(s) from which the client was unbound.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,FM.WebSync.Core.Record[])">
            <summary>
            Unbinds a client from a set of records.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="records">The records from which the client should be unbound.</param>
            <returns>The records from which the client was unbound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,System.String,System.String)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="key">The key of the record to unbind.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,System.String,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="key">The key of the record to unbind.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <param name="unboundRecords">The record(s) from which the client was unbound.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,FM.WebSync.Core.Record,System.String)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="record">The record from which the client should be unbound.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,FM.WebSync.Core.Record,System.String,FM.WebSync.Core.Record[]@)">
            <summary>
            Unbinds a client from a record.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="record">The record from which the client should be unbound.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <param name="unboundRecords">The record(s) from which the client was unbound.</param>
            <returns><c>true</c> if the unbind was succesful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unbind(System.String,FM.WebSync.Core.Record[],System.String)">
            <summary>
            Unbinds a client from a set of records.
            </summary>
            <param name="clientId">The ID of the client to unbind.</param>
            <param name="records">The records from which the client should be unbound.</param>
            <param name="domainKey">The domain key for which the client is valid. Only necessary when grouping connections.</param>
            <returns>The records from which the client was unbound.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Subscribe(System.String,System.String)">
            <summary>
            Subscribes a client to a channel. By default,
            data delivered to server-subscribed channels is handled by the
            client-side callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnUnhandledReceive"/>.
            Alternatively, channel-specific callbacks can be registered by invoking
            <see cref="M:FM.WebSync.Core.Client.SetHandler(System.String,FM.WebSync.Core.SingleCallback{FM.WebSync.Core.ReceiveArgs})"/>.
            </summary>
            <param name="clientId">The ID of the client to subscribe.</param>
            <param name="channel">The channel to which the client should be subscribed.</param>
            <returns><c>true</c> if the subscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Subscribe(System.String,System.String,System.String[]@)">
            <summary>
            Subscribes a client to a channel. By default, 
            data delivered to server-subscribed channels is handled by the
            client-side callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnUnhandledReceive"/>.
            Alternatively, channel-specific callbacks can be registered by invoking
            <see cref="M:FM.WebSync.Core.Client.SetHandler(System.String,FM.WebSync.Core.SingleCallback{FM.WebSync.Core.ReceiveArgs})"/>.
            </summary>
            <param name="clientId">The ID of the client to subscribe.</param>
            <param name="channel">The channel to which the client should be subscribed.</param>
            <param name="subscribedChannels">The channel(s) to which the client was subscribed.</param>
            <returns><c>true</c> if the subscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Subscribe(System.String,System.String[])">
            <summary>
            Subscribes a client to a set of channels. By default,
            data delivered to server-subscribed channels is handled by the
            client-side callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnUnhandledReceive"/>.
            Alternatively, channel-specific callbacks can be registered by invoking
            <see cref="M:FM.WebSync.Core.Client.SetHandler(System.String,FM.WebSync.Core.SingleCallback{FM.WebSync.Core.ReceiveArgs})"/>.
            </summary>
            <param name="clientId">The ID of the client to subscribe.</param>
            <param name="channels">The channels to which the client should be subscribed.</param>
            <returns>The channels to which the client was subscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Subscribe(System.String,System.String,System.String)">
            <summary>
            Subscribes a client to a channel. By default,
            data delivered to server-subscribed channels is handled by the
            client-side callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnUnhandledReceive"/>.
            Alternatively, channel-specific callbacks can be registered by invoking
            <see cref="M:FM.WebSync.Core.Client.SetHandler(System.String,FM.WebSync.Core.SingleCallback{FM.WebSync.Core.ReceiveArgs})"/>.
            </summary>
            <param name="clientId">The ID of the client to subscribe.</param>
            <param name="channel">The channel to which the client should be subscribed.</param>
            <param name="domainKey">The key for which the subscribe is valid. Only necessary when grouping connections.</param>
            <returns><c>true</c> if the subscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Subscribe(System.String,System.String,System.String,System.String[]@)">
            <summary>
            Subscribes a client to a channel. By default,
            data delivered to server-subscribed channels is handled by the
            client-side callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnUnhandledReceive"/>.
            Alternatively, channel-specific callbacks can be registered by invoking
            <see cref="M:FM.WebSync.Core.Client.SetHandler(System.String,FM.WebSync.Core.SingleCallback{FM.WebSync.Core.ReceiveArgs})"/>.
            </summary>
            <param name="clientId">The ID of the client to subscribe.</param>
            <param name="channel">The channel to which the client should be subscribed.</param>
            <param name="domainKey">The key for which the subscribe is valid. Only necessary when grouping connections.</param>
            <param name="subscribedChannels">The channel(s) to which the client was subscribed.</param>
            <returns><c>true</c> if the subscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Subscribe(System.String,System.String[],System.String)">
            <summary>
            Subscribes a client to a set of channels. By default,
            data delivered to server-subscribed channels is handled by the
            client-side callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnUnhandledReceive"/>.
            Alternatively, channel-specific callbacks can be registered by invoking
            <see cref="M:FM.WebSync.Core.Client.SetHandler(System.String,FM.WebSync.Core.SingleCallback{FM.WebSync.Core.ReceiveArgs})"/>.
            </summary>
            <param name="clientId">The ID of the client to subscribe.</param>
            <param name="channels">The channels to which the client should be subscribed.</param>
            <param name="domainKey">The key for which the subscribe is valid. Only necessary when grouping connections.</param>
            <returns>The channels to which the client was subscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unsubscribe(System.String,System.String)">
            <summary>
            Unsubscribes a client from a specific channel.
            </summary>
            <param name="clientId">The ID of the client to unsubscribe.</param>
            <param name="channel">The channel from which the client should be unsubscribed.</param>
            <returns><c>true</c> if the unsubscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unsubscribe(System.String,System.String,System.String[]@)">
            <summary>
            Unsubscribes a client from a specific channel.
            </summary>
            <param name="clientId">The ID of the client to unsubscribe.</param>
            <param name="channel">The channel from which the client should be unsubscribed.</param>
            <param name="unsubscribedChannels">The channel(s) from which the client was unsubscribed.</param>
            <returns><c>true</c> if the unsubscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unsubscribe(System.String,System.String[])">
            <summary>
            Unsubscribes a client from a specific set of channels.
            </summary>
            <param name="clientId">The ID of the client to unsubscribe.</param>
            <param name="channels">The channels from which the client should be unsubscribed.</param>
            <returns>The channels from which the client was unsubscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unsubscribe(System.String,System.String,System.String)">
            <summary>
            Unsubscribes a client from a specific channel.
            </summary>
            <param name="clientId">The ID of the client to unsubscribe.</param>
            <param name="channel">The channel from which the client should be unsubscribed.</param>
            <param name="domainKey">The key for which the unsubscribe is valid. Only necessary when grouping connections.</param>
            <returns><c>true</c> if the unsubscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unsubscribe(System.String,System.String,System.String,System.String[]@)">
            <summary>
            Unsubscribes a client from a specific channel.
            </summary>
            <param name="clientId">The ID of the client to unsubscribe.</param>
            <param name="channel">The channel from which the client should be unsubscribed.</param>
            <param name="domainKey">The key for which the unsubscribe is valid. Only necessary when grouping connections.</param>
            <param name="unsubscribedChannels">The channel(s) from which the client was unsubscribed.</param>
            <returns><c>true</c> if the unsubscribe was successful; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.Unsubscribe(System.String,System.String[],System.String)">
            <summary>
            Unsubscribes a client from a specific set of channels.
            </summary>
            <param name="clientId">The ID of the client to unsubscribe.</param>
            <param name="channels">The channels from which the client should be unsubscribed.</param>
            <param name="domainKey">The key for which the unsubscribe is valid. Only necessary when grouping connections.</param>
            <returns>The channels from which the client was unsubscribed.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetClientCount">
            <summary>
            Gets the total number of clients, including clients on different servers.
            </summary>
            <returns>The total number of clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetClientCount(System.String)">
            <summary>
            Gets the total number of clients, including clients on different servers.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid. Only necessary when grouping connections.</param>
            <returns>The total number of clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedClientCount(System.String)">
            <summary>
            Gets the total number of clients subscribed to a specific channel,
            including clients on different servers.
            </summary>
            <param name="channel">The channel to query.</param>
            <returns>The total number of clients subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedClientCount(System.String,System.String)">
            <summary>
            Gets the total number of clients subscribed to a specific channel,
            including clients on different servers.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid. Only necessary when grouping connections.</param>
            <returns>The total number of clients subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetClientIds">
            <summary>
            Gets the IDs of all clients, including clients on different servers.
            </summary>
            <returns>The IDs of all clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetClientIds(System.String)">
            <summary>
            Gets the IDs of all clients, including clients on different servers.
            </summary>
            <param name="domainKey">The domain key for which the clients are valid. Only necessary when grouping connections.</param>
            <returns>The IDs of all clients.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedClientIds(System.String)">
            <summary>
            Gets the IDs of all clients subscribed to a specific channel,
            including clients on different servers.
            </summary>
            <param name="channel">The channel to query.</param>
            <returns>The IDs of all clients subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedClientIds(System.String,System.String)">
            <summary>
            Gets the IDs of all clients subscribed to a specific channel,
            including clients on different servers.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid. Only necessary when grouping connections.</param>
            <returns>The IDs of all clients subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedClients(System.String)">
            <summary>
            Gets the IDs and bound records of all clients subscribed to a specific channel,
            including clients on different servers.
            </summary>
            <param name="channel">The channel to query.</param>
            <returns>The IDs and bound records of all clients subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedClients(System.String,System.String)">
            <summary>
            Gets the IDs and bound records of all clients subscribed to a specific channel,
            including clients on different servers.
            </summary>
            <param name="channel">The channel to query.</param>
            <param name="domainKey">The domain key for which the channel is valid. Only necessary when grouping connections.</param>
            <returns>The IDs and bound records of all clients subscribed to the channel.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedChannels(System.String)">
            <summary>
            Gets a client's subscribed channels.
            </summary>
            <param name="clientId">The ID of the client to query.</param>
            <returns>The client's subscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetSubscribedChannels(System.String,System.String)">
            <summary>
            Gets a client's subscribed channels.
            </summary>
            <param name="clientId">The ID of the client to query.</param>
            <param name="domainKey">The domain key for which the client is valid.</param>
            <returns>The client's subscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetBoundRecords(System.String)">
            <summary>
            Gets a client's bound records.
            </summary>
            <param name="clientId">The ID of the client to query.</param>
            <returns>The client's bound records.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.GetBoundRecords(System.String,System.String)">
            <summary>
            Gets a client's bound records.
            </summary>
            <param name="clientId">The ID of the client to query.</param>
            <param name="domainKey">The domain key for which the client is valid.</param>
            <returns>The client's bound records.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.BeginProcessRequestBase(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
            <summary>
            Begins processing a new WebSync request (base).
            </summary>
            <param name="context">The HTTP context.</param>
            <param name="cb">The callback.</param>
            <param name="extraData">The extra data.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.EndProcessRequestBase(System.IAsyncResult)">
            <summary>
            Ends processing a WebSync request (base).
            </summary>
            <param name="result">The asynchronous result.</param>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
            <summary>
            Begins processing a new WebSync request.
            </summary>
            <param name="context">The HTTP context.</param>
            <param name="cb">The callback.</param>
            <param name="extraData">The extra data.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.EndProcessRequest(System.IAsyncResult)">
            <summary>
            Ends processing a WebSync request.
            </summary>
            <param name="result">The asynchronous result.</param>
        </member>
        <member name="M:FM.WebSync.Server.RequestHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes a WebSync request synchronously.
            </summary>
            <param name="context">The HTTP context.</param>
        </member>
        <member name="P:FM.WebSync.Server.RequestHandler.IsReusable">
            <summary>
            Flags the handler as reusable.
            </summary>
        </member>
        <member name="M:FM.WebSync.Server.RequestManager.#ctor(FM.WebSync.Server.Providers.Provider)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.RequestManager"/> class.
            </summary>
            <param name="provider">The provider with which the manager should be initialized.</param>
        </member>
        <member name="M:FM.WebSync.Server.RequestManager.BeginRequest(FM.WebSync.Server.AsyncResult)">
            <summary>
            Called from an async HttpHandler method to begin the request.
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Server.RequestManager.EndRequest(System.IAsyncResult)">
            <summary>
            Called from an async HttpHandler method to complete the request.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:FM.WebSync.Server.RequestManager.RegisterEventMethod(System.Reflection.MethodInfo)">
            <summary>
            Tries to register a method associated with a WebSync event.
            </summary>
            <param name="methodInfo">The reflected method.</param>
        </member>
        <member name="M:FM.WebSync.Server.RequestManager.UnregisterEventMethod(System.Reflection.MethodInfo)">
            <summary>
            Tries to unregister a method associated with a WebSync event.
            </summary>
            <param name="methodInfo">The reflected method.</param>
        </member>
        <member name="M:FM.WebSync.Server.RequestManager.FireEvent(FM.WebSync.Server.EventType,FM.WebSync.Server.EventSource,System.Web.HttpContextBase,FM.WebSync.Core.BoundRecords,FM.WebSync.Core.SubscribedChannels,FM.WebSync.Core.Message[]@,System.String@,System.Boolean)">
            <summary>
            Fires an event handler.
            </summary>
            <param name="eventType">The type of event being fired.</param>
            <param name="source">The source of the event.</param>
            <param name="context">The current HTTP context.</param>
            <param name="boundRecords">Any key/value pairs bound to the client.</param>
            <param name="subscribedChannels">Any channels to which the client is subscribed.</param>
            <param name="messages">The messages in the current context.</param>
            <param name="domainKey">The domain key of the request.</param>
            <param name="forced">Whether or not the event was forced.</param>
        </member>
        <member name="T:FM.WebSync.Server.RequestManager.EventSingleCallback">
            <summary>
            Method signature for continuing execution after a single-message event.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.RequestManager.EventMultipleCallback">
            <summary>
            Method signature for continuing execution after a multiple-message event.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Threads.WaitRequest.ClientId">
            <summary>
            The ID of the client initiating the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Threads.WaitRequest.clientIdentity">
            <summary>
            The unique client identity.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Threads.WaitRequest.DateTimeAdded">
            <summary>
            Date/time the request was added to the thread pool.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Threads.WaitRequest.Result">
            <summary>
            Asynchronous result going back to the client.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Threads.WaitRequest.Id">
            <summary>
            ID of the message initiating the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.Threads.WaitRequest.Timestamp">
            <summary>
            Bayeux timestamp representing when message was received.
            </summary>
        </member>
        <member name="T:FM.WebSync.Server.WebSyncEventAttribute">
            <summary>
            Declares a static method to be invoked on <see cref="T:FM.WebSync.Server.RequestHandler"/> events related
            to the processing of WebSync requests.
            </summary>
            <remarks>
            <para>
            Decorating a method with this attribute will cause it to attach to the specified
            <see cref="P:FM.WebSync.Server.WebSyncEventAttribute.EventType"/> and execute whenever that <see cref="P:FM.WebSync.Server.WebSyncEventAttribute.EventType"/> is raised.
            Decorated methods can be declared anywhere, but the recommended practice is to create
            a static containing class (i.e. <tt>WebSyncMethods</tt>) that houses all decorated
            methods. If WebSync is configured to run with <tt>targetedScan=true</tt> (see
            web.config options), then it is necessary to define the assembly-level
            <see cref="T:FM.WebSync.Server.WebSyncMethodContainerAttribute"/> for each class containing WebSync
            event methods.
            </para>
            <para>
            Use of this attribute is intended for application developers writing custom code
            as well as third-party WebSync extension developers. When writing a third-party
            extension for distribution, defining <see cref="T:FM.WebSync.Server.WebSyncMethodContainerAttribute"/>
            is not optional.
            </para>
            <example>
            <code>
            [WebSyncEvent(EventType.AfterConnect)]
            public static void MyMethod(object sender, WebSyncEventArgs args)
            {
                // handle the event, deny the request, etc.
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncEventAttribute.#ctor(FM.WebSync.Server.EventType)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/> class.
            </summary>
            <param name="eventType">The event type(s) to which the method should attach.</param>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncEventAttribute.#ctor(FM.WebSync.Server.EventType,FM.WebSync.Server.Execution)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/> class.
            </summary>
            <param name="eventType">The event type(s) the method will attach to.</param>
            <param name="execution">The manner in which the method should be executed.</param>
        </member>
        <member name="M:FM.WebSync.Server.WebSyncEventAttribute.#ctor(FM.WebSync.Server.EventType,FM.WebSync.Server.Execution,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Server.WebSyncEventAttribute"/> class.
            </summary>
            <param name="eventType">The event type(s) to which the method should attach.</param>
            <param name="execution">The manner in which the method should be executed.</param>
            <param name="priority">The priority with which the method should execute (lowest values execute first).</param>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventAttribute.EventType">
            <summary>
            The event type(s) to which the method should attach.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventAttribute.Execution">
            <summary>
            The manner in which the method should be executed.
            Defaults to <see cref="F:FM.WebSync.Server.Execution.Normal"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Server.WebSyncEventAttribute.Priority">
            <summary>
            The priority with which the method should execute (lowest values execute first).
            Defaults to (uint.MaxValue - uint.MinValue) / 2.
            </summary>
        </member>
    </members>
</doc>
